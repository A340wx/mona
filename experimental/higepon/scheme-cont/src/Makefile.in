# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = scheme$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_scheme_OBJECTS = scheme-Application.$(OBJEXT) \
	scheme-Assignment.$(OBJEXT) scheme-Begin.$(OBJEXT) \
	scheme-Charcter.$(OBJEXT) scheme-Cond.$(OBJEXT) \
	scheme-Definition.$(OBJEXT) scheme-Environment.$(OBJEXT) \
	scheme-Error.$(OBJEXT) scheme-Eval.$(OBJEXT) \
	scheme-Frame.$(OBJEXT) scheme-Lambda.$(OBJEXT) \
	scheme-Let.$(OBJEXT) scheme-LetAsterisk.$(OBJEXT) \
	scheme-Macro.$(OBJEXT) scheme-MacroFilter.$(OBJEXT) \
	scheme-Number.$(OBJEXT) scheme-Object.$(OBJEXT) \
	scheme-Pair.$(OBJEXT) scheme-Parser.$(OBJEXT) \
	scheme-CharcterProcedures.$(OBJEXT) \
	scheme-EqualProcedures.$(OBJEXT) scheme-False.$(OBJEXT) \
	scheme-IOProcedures.$(OBJEXT) \
	scheme-NumberProcedures.$(OBJEXT) \
	scheme-PairProcedures.$(OBJEXT) scheme-Set.$(OBJEXT) \
	scheme-StringProcedures.$(OBJEXT) \
	scheme-SymbolProcedures.$(OBJEXT) scheme-True.$(OBJEXT) \
	scheme-VectorProcedures.$(OBJEXT) scheme-Procedure.$(OBJEXT) \
	scheme-Quote.$(OBJEXT) scheme-QuoteFilter.$(OBJEXT) \
	scheme-SExp.$(OBJEXT) scheme-Kernel.$(OBJEXT) \
	scheme-SpecialIf.$(OBJEXT) scheme-String.$(OBJEXT) \
	scheme-Tokenizer.$(OBJEXT) scheme-Translator.$(OBJEXT) \
	scheme-Variable.$(OBJEXT) scheme-Vector.$(OBJEXT) \
	scheme-load.$(OBJEXT) scheme-main.$(OBJEXT) \
	scheme-scheme.$(OBJEXT)
scheme_OBJECTS = $(am_scheme_OBJECTS)
scheme_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(scheme_SOURCES)
DIST_SOURCES = $(scheme_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
#scheme_INCLUDES=-I /usr/include -I /usr/include/stlport -I .
scheme_CXXFLAGS = -pg -I /usr/local/include/gc -fno-exceptions -fno-rtti -O0 -gstabs+ -Wall -DGC_OPERATOR_NEW_ARRAY# -DUSE_BOEHM_GC
scheme_LDFLAGS = -pg -lgc
scheme_SOURCES = \
Application.cpp\
Application.h\
Assert.h\
Assignment.cpp\
Assignment.h\
Begin.cpp\
Begin.h\
Charcter.cpp\
Charcter.h\
Cond.cpp\
Cond.h\
Definition.cpp\
Definition.h\
Environment.cpp\
Environment.h\
Error.cpp\
Error.h\
Eval.cpp\
Eval.h\
Frame.cpp\
Frame.h\
Lambda.cpp\
Lambda.h\
Let.cpp\
Let.h\
LetAsterisk.cpp\
LetAsterisk.h\
Macro.cpp\
Macro.h\
MacroFilter.cpp\
MacroFilter.h\
Number.cpp\
Number.h\
Object.cpp\
Object.h\
Pair.cpp\
Pair.h\
Parser.cpp\
Parser.h\
PrimitiveProcedure.h\
procedures/CharcterProcedures.cpp\
procedures/EqualProcedures.cpp\
procedures/False.cpp\
procedures/False.h\
procedures/IOProcedures.cpp\
procedures/NumberProcedures.cpp\
procedures/PairProcedures.cpp\
procedures/Procedure.h\
procedures/Set.cpp\
procedures/Set.h\
procedures/StringProcedures.cpp\
procedures/SymbolProcedures.cpp\
procedures/True.cpp\
procedures/True.h\
procedures/VectorProcedures.cpp\
Procedure.cpp\
Procedure.h\
Quote.cpp\
Quote.h\
QuoteFilter.cpp\
QuoteFilter.h\
SExp.cpp\
SExp.h\
Kernel.cpp\
Kernel.h\
SpecialIf.cpp\
SpecialIf.h\
String.cpp\
String.h\
Tokenizer.cpp\
Tokenizer.h\
Translator.cpp\
Translator.h\
Variable.cpp\
Variable.h\
Vector.cpp\
Vector.h\
load.cpp\
main.cpp\
scheme.cpp\
scheme.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  --ignore-deps src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
scheme$(EXEEXT): $(scheme_OBJECTS) $(scheme_DEPENDENCIES) 
	@rm -f scheme$(EXEEXT)
	$(CXXLINK) $(scheme_LDFLAGS) $(scheme_OBJECTS) $(scheme_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cpp.o:
	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

scheme-Application.o: Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Application.o `test -f 'Application.cpp' || echo '$(srcdir)/'`Application.cpp

scheme-Application.obj: Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Application.obj `if test -f 'Application.cpp'; then $(CYGPATH_W) 'Application.cpp'; else $(CYGPATH_W) '$(srcdir)/Application.cpp'; fi`

scheme-Assignment.o: Assignment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Assignment.o `test -f 'Assignment.cpp' || echo '$(srcdir)/'`Assignment.cpp

scheme-Assignment.obj: Assignment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Assignment.obj `if test -f 'Assignment.cpp'; then $(CYGPATH_W) 'Assignment.cpp'; else $(CYGPATH_W) '$(srcdir)/Assignment.cpp'; fi`

scheme-Begin.o: Begin.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Begin.o `test -f 'Begin.cpp' || echo '$(srcdir)/'`Begin.cpp

scheme-Begin.obj: Begin.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Begin.obj `if test -f 'Begin.cpp'; then $(CYGPATH_W) 'Begin.cpp'; else $(CYGPATH_W) '$(srcdir)/Begin.cpp'; fi`

scheme-Charcter.o: Charcter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Charcter.o `test -f 'Charcter.cpp' || echo '$(srcdir)/'`Charcter.cpp

scheme-Charcter.obj: Charcter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Charcter.obj `if test -f 'Charcter.cpp'; then $(CYGPATH_W) 'Charcter.cpp'; else $(CYGPATH_W) '$(srcdir)/Charcter.cpp'; fi`

scheme-Cond.o: Cond.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Cond.o `test -f 'Cond.cpp' || echo '$(srcdir)/'`Cond.cpp

scheme-Cond.obj: Cond.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Cond.obj `if test -f 'Cond.cpp'; then $(CYGPATH_W) 'Cond.cpp'; else $(CYGPATH_W) '$(srcdir)/Cond.cpp'; fi`

scheme-Definition.o: Definition.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Definition.o `test -f 'Definition.cpp' || echo '$(srcdir)/'`Definition.cpp

scheme-Definition.obj: Definition.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Definition.obj `if test -f 'Definition.cpp'; then $(CYGPATH_W) 'Definition.cpp'; else $(CYGPATH_W) '$(srcdir)/Definition.cpp'; fi`

scheme-Environment.o: Environment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Environment.o `test -f 'Environment.cpp' || echo '$(srcdir)/'`Environment.cpp

scheme-Environment.obj: Environment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Environment.obj `if test -f 'Environment.cpp'; then $(CYGPATH_W) 'Environment.cpp'; else $(CYGPATH_W) '$(srcdir)/Environment.cpp'; fi`

scheme-Error.o: Error.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Error.o `test -f 'Error.cpp' || echo '$(srcdir)/'`Error.cpp

scheme-Error.obj: Error.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Error.obj `if test -f 'Error.cpp'; then $(CYGPATH_W) 'Error.cpp'; else $(CYGPATH_W) '$(srcdir)/Error.cpp'; fi`

scheme-Eval.o: Eval.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Eval.o `test -f 'Eval.cpp' || echo '$(srcdir)/'`Eval.cpp

scheme-Eval.obj: Eval.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Eval.obj `if test -f 'Eval.cpp'; then $(CYGPATH_W) 'Eval.cpp'; else $(CYGPATH_W) '$(srcdir)/Eval.cpp'; fi`

scheme-Frame.o: Frame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Frame.o `test -f 'Frame.cpp' || echo '$(srcdir)/'`Frame.cpp

scheme-Frame.obj: Frame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Frame.obj `if test -f 'Frame.cpp'; then $(CYGPATH_W) 'Frame.cpp'; else $(CYGPATH_W) '$(srcdir)/Frame.cpp'; fi`

scheme-Lambda.o: Lambda.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Lambda.o `test -f 'Lambda.cpp' || echo '$(srcdir)/'`Lambda.cpp

scheme-Lambda.obj: Lambda.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Lambda.obj `if test -f 'Lambda.cpp'; then $(CYGPATH_W) 'Lambda.cpp'; else $(CYGPATH_W) '$(srcdir)/Lambda.cpp'; fi`

scheme-Let.o: Let.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Let.o `test -f 'Let.cpp' || echo '$(srcdir)/'`Let.cpp

scheme-Let.obj: Let.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Let.obj `if test -f 'Let.cpp'; then $(CYGPATH_W) 'Let.cpp'; else $(CYGPATH_W) '$(srcdir)/Let.cpp'; fi`

scheme-LetAsterisk.o: LetAsterisk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-LetAsterisk.o `test -f 'LetAsterisk.cpp' || echo '$(srcdir)/'`LetAsterisk.cpp

scheme-LetAsterisk.obj: LetAsterisk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-LetAsterisk.obj `if test -f 'LetAsterisk.cpp'; then $(CYGPATH_W) 'LetAsterisk.cpp'; else $(CYGPATH_W) '$(srcdir)/LetAsterisk.cpp'; fi`

scheme-Macro.o: Macro.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Macro.o `test -f 'Macro.cpp' || echo '$(srcdir)/'`Macro.cpp

scheme-Macro.obj: Macro.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Macro.obj `if test -f 'Macro.cpp'; then $(CYGPATH_W) 'Macro.cpp'; else $(CYGPATH_W) '$(srcdir)/Macro.cpp'; fi`

scheme-MacroFilter.o: MacroFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-MacroFilter.o `test -f 'MacroFilter.cpp' || echo '$(srcdir)/'`MacroFilter.cpp

scheme-MacroFilter.obj: MacroFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-MacroFilter.obj `if test -f 'MacroFilter.cpp'; then $(CYGPATH_W) 'MacroFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/MacroFilter.cpp'; fi`

scheme-Number.o: Number.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Number.o `test -f 'Number.cpp' || echo '$(srcdir)/'`Number.cpp

scheme-Number.obj: Number.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Number.obj `if test -f 'Number.cpp'; then $(CYGPATH_W) 'Number.cpp'; else $(CYGPATH_W) '$(srcdir)/Number.cpp'; fi`

scheme-Object.o: Object.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp

scheme-Object.obj: Object.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`

scheme-Pair.o: Pair.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Pair.o `test -f 'Pair.cpp' || echo '$(srcdir)/'`Pair.cpp

scheme-Pair.obj: Pair.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Pair.obj `if test -f 'Pair.cpp'; then $(CYGPATH_W) 'Pair.cpp'; else $(CYGPATH_W) '$(srcdir)/Pair.cpp'; fi`

scheme-Parser.o: Parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Parser.o `test -f 'Parser.cpp' || echo '$(srcdir)/'`Parser.cpp

scheme-Parser.obj: Parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Parser.obj `if test -f 'Parser.cpp'; then $(CYGPATH_W) 'Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/Parser.cpp'; fi`

scheme-CharcterProcedures.o: procedures/CharcterProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-CharcterProcedures.o `test -f 'procedures/CharcterProcedures.cpp' || echo '$(srcdir)/'`procedures/CharcterProcedures.cpp

scheme-CharcterProcedures.obj: procedures/CharcterProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-CharcterProcedures.obj `if test -f 'procedures/CharcterProcedures.cpp'; then $(CYGPATH_W) 'procedures/CharcterProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/CharcterProcedures.cpp'; fi`

scheme-EqualProcedures.o: procedures/EqualProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-EqualProcedures.o `test -f 'procedures/EqualProcedures.cpp' || echo '$(srcdir)/'`procedures/EqualProcedures.cpp

scheme-EqualProcedures.obj: procedures/EqualProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-EqualProcedures.obj `if test -f 'procedures/EqualProcedures.cpp'; then $(CYGPATH_W) 'procedures/EqualProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/EqualProcedures.cpp'; fi`

scheme-False.o: procedures/False.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-False.o `test -f 'procedures/False.cpp' || echo '$(srcdir)/'`procedures/False.cpp

scheme-False.obj: procedures/False.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-False.obj `if test -f 'procedures/False.cpp'; then $(CYGPATH_W) 'procedures/False.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/False.cpp'; fi`

scheme-IOProcedures.o: procedures/IOProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-IOProcedures.o `test -f 'procedures/IOProcedures.cpp' || echo '$(srcdir)/'`procedures/IOProcedures.cpp

scheme-IOProcedures.obj: procedures/IOProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-IOProcedures.obj `if test -f 'procedures/IOProcedures.cpp'; then $(CYGPATH_W) 'procedures/IOProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/IOProcedures.cpp'; fi`

scheme-NumberProcedures.o: procedures/NumberProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-NumberProcedures.o `test -f 'procedures/NumberProcedures.cpp' || echo '$(srcdir)/'`procedures/NumberProcedures.cpp

scheme-NumberProcedures.obj: procedures/NumberProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-NumberProcedures.obj `if test -f 'procedures/NumberProcedures.cpp'; then $(CYGPATH_W) 'procedures/NumberProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/NumberProcedures.cpp'; fi`

scheme-PairProcedures.o: procedures/PairProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-PairProcedures.o `test -f 'procedures/PairProcedures.cpp' || echo '$(srcdir)/'`procedures/PairProcedures.cpp

scheme-PairProcedures.obj: procedures/PairProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-PairProcedures.obj `if test -f 'procedures/PairProcedures.cpp'; then $(CYGPATH_W) 'procedures/PairProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/PairProcedures.cpp'; fi`

scheme-Set.o: procedures/Set.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Set.o `test -f 'procedures/Set.cpp' || echo '$(srcdir)/'`procedures/Set.cpp

scheme-Set.obj: procedures/Set.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Set.obj `if test -f 'procedures/Set.cpp'; then $(CYGPATH_W) 'procedures/Set.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/Set.cpp'; fi`

scheme-StringProcedures.o: procedures/StringProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-StringProcedures.o `test -f 'procedures/StringProcedures.cpp' || echo '$(srcdir)/'`procedures/StringProcedures.cpp

scheme-StringProcedures.obj: procedures/StringProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-StringProcedures.obj `if test -f 'procedures/StringProcedures.cpp'; then $(CYGPATH_W) 'procedures/StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/StringProcedures.cpp'; fi`

scheme-SymbolProcedures.o: procedures/SymbolProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-SymbolProcedures.o `test -f 'procedures/SymbolProcedures.cpp' || echo '$(srcdir)/'`procedures/SymbolProcedures.cpp

scheme-SymbolProcedures.obj: procedures/SymbolProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-SymbolProcedures.obj `if test -f 'procedures/SymbolProcedures.cpp'; then $(CYGPATH_W) 'procedures/SymbolProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/SymbolProcedures.cpp'; fi`

scheme-True.o: procedures/True.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-True.o `test -f 'procedures/True.cpp' || echo '$(srcdir)/'`procedures/True.cpp

scheme-True.obj: procedures/True.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-True.obj `if test -f 'procedures/True.cpp'; then $(CYGPATH_W) 'procedures/True.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/True.cpp'; fi`

scheme-VectorProcedures.o: procedures/VectorProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-VectorProcedures.o `test -f 'procedures/VectorProcedures.cpp' || echo '$(srcdir)/'`procedures/VectorProcedures.cpp

scheme-VectorProcedures.obj: procedures/VectorProcedures.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-VectorProcedures.obj `if test -f 'procedures/VectorProcedures.cpp'; then $(CYGPATH_W) 'procedures/VectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/procedures/VectorProcedures.cpp'; fi`

scheme-Procedure.o: Procedure.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Procedure.o `test -f 'Procedure.cpp' || echo '$(srcdir)/'`Procedure.cpp

scheme-Procedure.obj: Procedure.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Procedure.obj `if test -f 'Procedure.cpp'; then $(CYGPATH_W) 'Procedure.cpp'; else $(CYGPATH_W) '$(srcdir)/Procedure.cpp'; fi`

scheme-Quote.o: Quote.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Quote.o `test -f 'Quote.cpp' || echo '$(srcdir)/'`Quote.cpp

scheme-Quote.obj: Quote.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Quote.obj `if test -f 'Quote.cpp'; then $(CYGPATH_W) 'Quote.cpp'; else $(CYGPATH_W) '$(srcdir)/Quote.cpp'; fi`

scheme-QuoteFilter.o: QuoteFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-QuoteFilter.o `test -f 'QuoteFilter.cpp' || echo '$(srcdir)/'`QuoteFilter.cpp

scheme-QuoteFilter.obj: QuoteFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-QuoteFilter.obj `if test -f 'QuoteFilter.cpp'; then $(CYGPATH_W) 'QuoteFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/QuoteFilter.cpp'; fi`

scheme-SExp.o: SExp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-SExp.o `test -f 'SExp.cpp' || echo '$(srcdir)/'`SExp.cpp

scheme-SExp.obj: SExp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-SExp.obj `if test -f 'SExp.cpp'; then $(CYGPATH_W) 'SExp.cpp'; else $(CYGPATH_W) '$(srcdir)/SExp.cpp'; fi`

scheme-Kernel.o: Kernel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Kernel.o `test -f 'Kernel.cpp' || echo '$(srcdir)/'`Kernel.cpp

scheme-Kernel.obj: Kernel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Kernel.obj `if test -f 'Kernel.cpp'; then $(CYGPATH_W) 'Kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/Kernel.cpp'; fi`

scheme-SpecialIf.o: SpecialIf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-SpecialIf.o `test -f 'SpecialIf.cpp' || echo '$(srcdir)/'`SpecialIf.cpp

scheme-SpecialIf.obj: SpecialIf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-SpecialIf.obj `if test -f 'SpecialIf.cpp'; then $(CYGPATH_W) 'SpecialIf.cpp'; else $(CYGPATH_W) '$(srcdir)/SpecialIf.cpp'; fi`

scheme-String.o: String.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp

scheme-String.obj: String.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`

scheme-Tokenizer.o: Tokenizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Tokenizer.o `test -f 'Tokenizer.cpp' || echo '$(srcdir)/'`Tokenizer.cpp

scheme-Tokenizer.obj: Tokenizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Tokenizer.obj `if test -f 'Tokenizer.cpp'; then $(CYGPATH_W) 'Tokenizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Tokenizer.cpp'; fi`

scheme-Translator.o: Translator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Translator.o `test -f 'Translator.cpp' || echo '$(srcdir)/'`Translator.cpp

scheme-Translator.obj: Translator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Translator.obj `if test -f 'Translator.cpp'; then $(CYGPATH_W) 'Translator.cpp'; else $(CYGPATH_W) '$(srcdir)/Translator.cpp'; fi`

scheme-Variable.o: Variable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Variable.o `test -f 'Variable.cpp' || echo '$(srcdir)/'`Variable.cpp

scheme-Variable.obj: Variable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Variable.obj `if test -f 'Variable.cpp'; then $(CYGPATH_W) 'Variable.cpp'; else $(CYGPATH_W) '$(srcdir)/Variable.cpp'; fi`

scheme-Vector.o: Vector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp

scheme-Vector.obj: Vector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`

scheme-load.o: load.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-load.o `test -f 'load.cpp' || echo '$(srcdir)/'`load.cpp

scheme-load.obj: load.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-load.obj `if test -f 'load.cpp'; then $(CYGPATH_W) 'load.cpp'; else $(CYGPATH_W) '$(srcdir)/load.cpp'; fi`

scheme-main.o: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

scheme-main.obj: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

scheme-scheme.o: scheme.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp

scheme-scheme.obj: scheme.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(scheme_CXXFLAGS) $(CXXFLAGS) -c -o scheme-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
