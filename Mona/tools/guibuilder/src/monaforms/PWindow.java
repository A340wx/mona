package guibuilder;

import java.awt.*;
import java.awt.event.*;
import java.io.*;

/**
 ウィンドウ部品
 */
public class PWindow extends PBase {
	/** 閉じるボタン (パレット) */
	static int icon_palette[] = {
		0xff1c1a1c,
		0xff8c8e8c,
		0xffcccecc,
		0xffacaeac,
		0xffeceeec,
		0xff9c9e9c,
		0xffdcdedc,
		0xffbcbebc,
		0xfffcfefc,
	};

	/** 閉じるボタン (データ) */
	static byte icon_data[] = {
		0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x2,
		0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
		0x1,0x0,0x8,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x0,0x8,
		0x1,0x0,0x2,0x5,0x5,0x3,0x3,0x7,0x7,0x2,0x1,0x0,0x8,
		0x1,0x0,0x2,0x5,0x3,0x3,0x7,0x7,0x2,0x2,0x1,0x0,0x8,
		0x1,0x0,0x2,0x3,0x3,0x7,0x7,0x2,0x2,0x6,0x1,0x0,0x8,
		0x1,0x0,0x2,0x3,0x7,0x7,0x2,0x2,0x6,0x6,0x1,0x0,0x8,
		0x1,0x0,0x2,0x7,0x7,0x2,0x2,0x6,0x6,0x4,0x1,0x0,0x8,
		0x1,0x0,0x2,0x7,0x2,0x2,0x6,0x6,0x4,0x4,0x1,0x0,0x8,
		0x1,0x0,0x2,0x2,0x2,0x6,0x6,0x4,0x4,0x8,0x1,0x0,0x8,
		0x1,0x0,0x2,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x8,
		0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
		0x2,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
	};
	
	/** 部品通し番号 */
	private static int count = 0;
	
	/** コンストラクタ */
	public PWindow() {
	}
	
	/** 描画ハンドラ */
	public void paint(Graphics g) {
		int i, j;
		int w = getWidth();
		int h = getHeight();
		int oy = INSETS_TOP;
		
		FontMetrics metrics = getFontMetrics(getFont());
		int fw = metrics.stringWidth(getCaption());
		int fh = metrics.getAscent() - metrics.getDescent();
		int tx = 2 + 2 + (oy - 8) + 2;
		int tw = tx + fw + 1 + 2 + 2;
		
		// タイトルバー
		DrawEngraved(g, 0, 0, tw, oy - 2);
		g.setColor(new Color(0xffffe000, true));
		g.fillRect(2, 2, tw - 4, oy - 4);
		
		// 閉じるボタン
		DrawEngraved(g, 4, 4, oy - 8, oy - 8);
		
		// 外枠
		g.setColor(getBackground());
		g.fillRect(0, oy - 2, w, h - (oy - 2));
		DrawEngraved(g, 0, oy - 2, w, h - (oy - 2));
		
		// キャプション
		g.drawString(getCaption(), tx, 4 + fh);
		g.drawString(getCaption(), tx + 1, 4 + fh);
		
		paintComponents(g);
	}
	
	//
	// IParts
	//
	
	/** 部品作成時に呼ばれる */
	public void create() {
		setBounds(100, 100, 200, 200);
		setForeground(DEFAULT_FORECOLOR);
		setBackground(DEFAULT_BACKCOLOR);
		setLayout(null);
		enableEvents(AWTEvent.MOUSE_EVENT_MASK);
		setName("Form" + (count + 1));
		setCaption("Form" + (count + 1));
		setFontStyle("FONT_PLAIN");
		count++;
	}
	
	/** 部品削除時に呼ばれる */
	public void dispose() {
		this.count = 0;
	}
	
	/** マウスイベント */
	public void processMouseEvent(MouseEvent e) {
		if (e.getID() == MouseEvent.MOUSE_PRESSED) {
			System.out.println("PWindow: source = " + e.getSource());
			((ApplicationWindow)getParent()).update(this);
		}
		super.processMouseEvent(e);
	}
}
