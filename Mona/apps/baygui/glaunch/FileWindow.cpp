// This file's encoding is UTF-8.

#include "FileWindow.h"
#include <gui/System/Mona/Forms/ControlPaint.h>

using namespace System;
using namespace System::Drawing;
using namespace System::Mona::Forms;

/** closeIcon (palette) */
static unsigned int close_palette[] = {
	0xff1c1a1c,
	0xff8c8e8c,
	0xffcccecc,
	0xffacaeac,
	0xffeceeec,
	0xff9c9e9c,
	0xffdcdedc,
	0xffbcbebc,
	0xfffcfefc,
};

/** closeIcon (data) */
static unsigned char close_data[] = {
	0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x2,
	0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
	0x1,0x0,0x8,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x0,0x8,
	0x1,0x0,0x2,0x5,0x5,0x3,0x3,0x7,0x7,0x2,0x1,0x0,0x8,
	0x1,0x0,0x2,0x5,0x3,0x3,0x7,0x7,0x2,0x2,0x1,0x0,0x8,
	0x1,0x0,0x2,0x3,0x3,0x7,0x7,0x2,0x2,0x6,0x1,0x0,0x8,
	0x1,0x0,0x2,0x3,0x7,0x7,0x2,0x2,0x6,0x6,0x1,0x0,0x8,
	0x1,0x0,0x2,0x7,0x7,0x2,0x2,0x6,0x6,0x4,0x1,0x0,0x8,
	0x1,0x0,0x2,0x7,0x2,0x2,0x6,0x6,0x4,0x4,0x1,0x0,0x8,
	0x1,0x0,0x2,0x2,0x2,0x6,0x6,0x4,0x4,0x8,0x1,0x0,0x8,
	0x1,0x0,0x2,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x8,
	0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
	0x2,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
};

FileWindow::FileWindow()
{
	this->offset = Point(6, 22);
	this->set_Bounds(Rectangle(80, 80, 510, 340));
	this->set_Text("/");
	this->set_Opacity(1.0);
	
	this->browser = new FileBrowser();
	this->browser->set_Size(this->get_ClientSize());
	this->get_Controls()->Add(this->browser.get());
}

void FileWindow::Create()
{
	Form::Create();
	this->_object->__internal2 = true;
}

void FileWindow::set_Directory(String path)
{
	this->set_Text(path);
	this->browser->ReadDirectory(path);
}

void FileWindow::OnPaint()
{
	if (this->buffer == NULL || (this->_object->Flags & WINDOWFLAGS_NOBORDER) != 0) return;
	
	_P<Graphics> g = Graphics::FromImage(this->buffer);
	int w = this->get_Width(), h = this->get_Height();
	_P<Font> f = Control::get_DefaultFont();
	Size sz = g->MeasureString(this->get_Text(), f);
	Color tf = Color::get_Black(), tb = Color::FromArgb(0xc0, 0xc0, 0xc0);
	Color tw = Color::get_White(), tg = Color::FromArgb(0x80, 0x80, 0x80);
	
	// 外枠
	g->FillRectangle(tb, 0, 0, w, h);
	g->DrawRectangle(tf, 0, 0, w, h);
	
	// 内枠
	g->DrawRectangle(tf, 5, 21, w - 10, h - 26);
	
	// 枠
	g->DrawLine(tw, 1, 1, w - 2, 1);
	g->DrawLine(tw, 1, 1, 1, h - 2);
	g->DrawLine(tw, w - 5, 21, w - 5, h - 5);
	g->DrawLine(tw, 5, h - 5, w - 5, h - 5);
	g->DrawLine(tg, w - 2, 2, w - 2, h - 2);
	g->DrawLine(tg, 2, h - 2, w - 2, h - 2);
	g->DrawLine(tg, 4, 20, w - 6, 20);
	g->DrawLine(tg, 4, 20, 4, h - 6);
	
	// タイトルバー
	for (int i = 4; i <= 14; i = i + 2) {
		g->DrawLine(tg, 20, i, w - 7, i);
		g->DrawLine(tw, 21, i + 1, w - 6, i + 1);
	}
	
	// 閉じるボタン
	for (int i = 0; i < 13; i++) {
		for (int j = 0; j < 13; j++) {
			g->SetPixel(j + 4, i + 4, Color::FromArgb(close_palette[close_data[i * 13 + j] & 0xFF]));
		}
	}
	
	// タイトル
	g->FillRectangle(tb, ((w - sz.Width) / 2) - 4, 2, sz.Width + 8, 22 - 4);
	g->DrawString(this->get_Text(), f, tf, ((w - sz.Width) / 2), ((22 - sz.Height) / 2));

	g->Dispose();
}
