
//-----------------------------------------------------------
//ベクトルクラス
//
//-----------------------------------------------------------
public class Vector
{
	//-----------------------------------------------------------
	//メンバ変数
	//
	//-----------------------------------------------------------
	float x;
	float y;
	float z;

	//-----------------------------------------------------------
	//コンストラクタ
	//
	//-----------------------------------------------------------
	Vector()
	{
	}
	Vector(float vx,float vy,float vz)
	{
		x = vx;
		y = vy;
		z = vz;
	}
	
	//-----------------------------------------------------------
	//ベクトルの初期化
	//
	//Vector v ...コピーするベクトル
	//-----------------------------------------------------------
	void Initialize(Vector v)
	{
		x = v.x;
		y = v.y;
		z = v.z;
	}

	//-----------------------------------------------------------
	//加算
	//
	//-----------------------------------------------------------
	void Add(Vector v)
	{
		x += v.x;
		y += v.y;
		z += v.z;
	}

	//-----------------------------------------------------------
	//ベクトルの長さ
	//
	//-----------------------------------------------------------
	float Length()
	{
		return (float)Math.sqrt(x*x + y*y + z*z);
	}

	//-----------------------------------------------------------
	//単位ベクトル化
	//
	//-----------------------------------------------------------
	void Normalize()
	{
		//単位ベクトルとは長さが１のベクトルのこと。
		float _l = (float)(1 / Math.sqrt(x*x + y*y + z*z));
		x *= _l;
		y *= _l;
		z *= _l;
	}

	//-----------------------------------------------------------
	//内積
	//
	//-----------------------------------------------------------
	float DotProduct(Vector v)
	{
		//内積を取るとベクトルとベクトルのなす角度が求まる。
		return (x * v.x + y * v.y + z * v.z);
	}

	//-----------------------------------------------------------
	//外積
	//
	//-----------------------------------------------------------
	void CrossProduct(Vector a,Vector b)
	{
		//外積は主に面に垂直な法線ベクトルを求めるために使用する。
		x = a.y * b.z - a.z * b.y;
		y = a.z * b.x - a.x * b.z;
		z = a.x * b.y - a.y * b.x;
	}

	//-----------------------------------------------------------
	//ベクトルを反転する
	//
	//-----------------------------------------------------------
	void Invert()
	{
		x = -x;
		y = -y;
		z = -z;
	}
}
