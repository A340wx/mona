#define HALF_FONTS 158

unsigned short halfFontTable[HALF_FONTS] = {
0x0020,
0x0021,
0x0022,
0x0023,
0x0024,
0x0025,
0x0026,
0x0027,
0x0028,
0x0029,
0x002A,
0x002B,
0x002C,
0x002D,
0x002E,
0x002F,
0x0030,
0x0031,
0x0032,
0x0033,
0x0034,
0x0035,
0x0036,
0x0037,
0x0038,
0x0039,
0x003A,
0x003B,
0x003C,
0x003D,
0x003E,
0x003F,
0x0040,
0x0041,
0x0042,
0x0043,
0x0044,
0x0045,
0x0046,
0x0047,
0x0048,
0x0049,
0x004A,
0x004B,
0x004C,
0x004D,
0x004E,
0x004F,
0x0050,
0x0051,
0x0052,
0x0053,
0x0054,
0x0055,
0x0056,
0x0057,
0x0058,
0x0059,
0x005A,
0x005B,
0x00A5,
0x005D,
0x005E,
0x005F,
0x0060,
0x0061,
0x0062,
0x0063,
0x0064,
0x0065,
0x0066,
0x0067,
0x0068,
0x0069,
0x006A,
0x006B,
0x006C,
0x006D,
0x006E,
0x006F,
0x0070,
0x0071,
0x0072,
0x0073,
0x0074,
0x0075,
0x0076,
0x0077,
0x0078,
0x0079,
0x007A,
0x007B,
0x007C,
0x007D,
0x203E,
0xFF61,
0xFF62,
0xFF63,
0xFF64,
0xFF65,
0xFF66,
0xFF67,
0xFF68,
0xFF69,
0xFF6A,
0xFF6B,
0xFF6C,
0xFF6D,
0xFF6E,
0xFF6F,
0xFF70,
0xFF71,
0xFF72,
0xFF73,
0xFF74,
0xFF75,
0xFF76,
0xFF77,
0xFF78,
0xFF79,
0xFF7A,
0xFF7B,
0xFF7C,
0xFF7D,
0xFF7E,
0xFF7F,
0xFF80,
0xFF81,
0xFF82,
0xFF83,
0xFF84,
0xFF85,
0xFF86,
0xFF87,
0xFF88,
0xFF89,
0xFF8A,
0xFF8B,
0xFF8C,
0xFF8D,
0xFF8E,
0xFF8F,
0xFF90,
0xFF91,
0xFF92,
0xFF93,
0xFF94,
0xFF95,
0xFF96,
0xFF97,
0xFF98,
0xFF99,
0xFF9A,
0xFF9B,
0xFF9C,
0xFF9D,
0xFF9E,
0xFF9F,
};

int getHalfFontIndex(int n){
	int i;
	//printf("searching %d ...\n", n);
	for (i = 0; i < HALF_FONTS; i++){
		if (halfFontTable[i] == n) {
			//printf("halfFontTable[%d] = %d, n = %d\n", i, halfFontTable[i], n);
			return i;
		}
	}
	return -1;
}
