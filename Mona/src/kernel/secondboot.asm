; This file was automatically generated by IL2Asm16.

[bits 16]
jmp SecondBootMain

ILMain:
	call	Mona_SecondBoot___cctor
	call	Mona_FDC___cctor
	call	Mona_VESA___cctor
	call	Mona_SecondBoot__Main
	ret

; class <Module>

; class Mona.SecondBoot

Mona_SecondBoot__fileseg dw 0
Mona_SecondBoot__sizeptr dw 0

; void Mona.SecondBoot::Main()
Mona_SecondBoot__Main:
;PE_0000025C: call 06000021
	call	Mona_Console__WriteLine
;PE_00000261: ldstr 70000001
	mov	ax,	US_00000001
	push	ax
;PE_00000266: call 06000022
	call	Mona_Console__WriteLine__string
;PE_0000026B: ldstr 7000000D
	mov	ax,	US_0000000D
	push	ax
;PE_00000270: call 06000022
	call	Mona_Console__WriteLine__string
;PE_00000275: call 06000021
	call	Mona_Console__WriteLine
;PE_0000027A: [native] get register
	push	cs
;PE_0000027F: [native] set register
	pop	ds
;PE_00000284: [native] inline
	cli
;PE_0000028F: call 0600000D
	call	Mona_A20__Enable
;PE_00000294: ldstr 70000045
	mov	ax,	US_00000045
	push	ax
;PE_00000299: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_0000029E: ldstr 7000005B
	mov	ax,	US_0000005B
	push	ax
;PE_000002A3: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_000002A8: ldstr 7000006D
	mov	ax,	US_0000006D
	push	ax
;PE_000002AD: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_000002B2: ldstr 70000085
	mov	ax,	US_00000085
	push	ax
;PE_000002B7: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_000002BC: ldstr 7000009D
	mov	ax,	US_0000009D
	push	ax
;PE_000002C1: call 06000003
	call	Mona_SecondBoot__ReadConfig__string
;PE_000002C6: call 06000004
	call	Mona_SecondBoot__SetVesaMode
;PE_000002CB: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_000002CC: call 06000006
	call	Mona_SecondBoot__WriteSize__u2
;PE_000002D1: ret
	ret

; void Mona.SecondBoot::ReadServer(string)
Mona_SecondBoot__ReadServer__string:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000002E0: ldsfld 04000006
	push	word [cs:Mona_SecondBoot__fileseg]
;PE_000002E5: ldarg.0
	push	word [ss:bp+4]
;PE_000002E6: call 06000005
	call	u2__Mona_SecondBoot__ReadFile__u2_string
;	push	ax	; [optimize] ignore
;PE_000002EB: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000002EC: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000002ED: brtrue.s 21
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	or	ax,	ax
	jnz	PE_00000310
;PE_000002EF: ldstr 700000AF
	mov	ax,	US_000000AF
	push	ax
;PE_000002F4: call 06000022
	call	Mona_Console__WriteLine__string
;PE_000002F9: ldstr 700000CD
	mov	ax,	US_000000CD
	push	ax
;PE_000002FE: call 06000022
	call	Mona_Console__WriteLine__string
PE_00000303: ;[native] inline
	hlt
;PE_0000030E: br.s F3
	jmp	PE_00000303
PE_00000310: ;ldloc.0
	push	word [ss:bp-2]
;PE_00000311: call 06000006
	call	Mona_SecondBoot__WriteSize__u2
;PE_00000316: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000317: ldc.i4.s 20
	mov	ax,	32
;	push	ax	; [optimize] ignore
;PE_00000319: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_0000031B: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000031C: ldsfld 04000006
;	push	word [cs:Mona_SecondBoot__fileseg]	; [optimize] ignore
;PE_00000321: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000322: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_SecondBoot__fileseg]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_SecondBoot__fileseg]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000324: stsfld 04000006
;	pop	word [cs:Mona_SecondBoot__fileseg]	; [optimize] ignore
	mov	word [cs:Mona_SecondBoot__fileseg],	ax	; [optimize] add
;PE_00000329: ret
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.SecondBoot::ReadConfig(string)
Mona_SecondBoot__ReadConfig__string:
	push	bp
	mov	bp,	sp
	sub	sp,	10
;PE_00000338: ldc.i4 00009000
	mov	ax,	36864
	push	ax
;PE_0000033D: ldarg.0
	push	word [ss:bp+4]
;PE_0000033E: call 06000005
	call	u2__Mona_SecondBoot__ReadFile__u2_string
;	push	ax	; [optimize] ignore
;PE_00000343: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000344: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000345: brtrue.s 0B
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	or	ax,	ax
	jnz	PE_00000352
;PE_00000347: ldstr 700000FB
	mov	ax,	US_000000FB
	push	ax
;PE_0000034C: call 06000022
	call	Mona_Console__WriteLine__string
;PE_00000351: ret
	jmp	PE_00000435	; [optimize] modify
PE_00000352: ;ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000353: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_00000358: [native] set register
	mov	di,	4352
;PE_00000362: [native] set register
	mov	ax,	[ss:bp-2]
;PE_00000368: [native] inline
	mov	[es:di],	ax
;PE_00000373: [native] set register
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;PE_00000379: [native] inline
	mov	[es:di+2],	ax
;PE_00000384: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000385: ldc.i4 00000200
	mov	ax,	512
;	push	ax	; [optimize] ignore
;PE_0000038A: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_0000038C: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000038D: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_00000392: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_00000397: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000398: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000399: br 00000090
	jmp	PE_0000042E
PE_0000039E: ;ldstr 70000183
	mov	ax,	US_00000183
	push	ax
;PE_000003A3: ldloc.1
	push	word [ss:bp-4]
;PE_000003A4: call 0600000A
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_000003A9: brfalse.s 1F
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000003CA
;PE_000003AB: ldloc.1
	push	word [ss:bp-4]
;PE_000003AC: ldstr 70000183
	mov	ax,	US_00000183
	push	ax
;PE_000003B1: call 06000009
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_000003B6: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
	push	ax
;PE_000003B8: call 0600000B
	call	u2__Mona_Str__ReadNumber__u2
;	push	ax	; [optimize] ignore
;PE_000003BD: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_000003BE: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000003BF: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000003C0: ble.s 68
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-6]	; [optimize] add
	jnc near	PE_0000042A
;PE_000003C2: ldloc.2
	push	word [ss:bp-6]
;PE_000003C3: stsfld 04000010
	pop	word [cs:Mona_VESA__Resolution]
;PE_000003C8: br.s 60
	jmp	PE_0000042A
PE_000003CA: ;ldstr 700001A5
	mov	ax,	US_000001A5
	push	ax
;PE_000003CF: ldloc.1
	push	word [ss:bp-4]
;PE_000003D0: call 0600000A
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_000003D5: brfalse.s 53
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_0000042A
;PE_000003D7: ldloc.1
	push	word [ss:bp-4]
;PE_000003D8: ldstr 700001A5
	mov	ax,	US_000001A5
	push	ax
;PE_000003DD: call 06000009
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_000003E2: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
	push	ax
;PE_000003E4: call 0600000B
	call	u2__Mona_Str__ReadNumber__u2
;	push	ax	; [optimize] ignore
;PE_000003E9: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_000003EA: ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000003EB: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000003EC: ble.s 3C
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-8]	; [optimize] add
	jnc near	PE_0000042A
;PE_000003EE: ldloc.3
	push	word [ss:bp-8]
;PE_000003EF: stsfld 04000011
	pop	word [cs:Mona_VESA__Bpp]
;PE_000003F4: br.s 34
	jmp	PE_0000042A
PE_000003F6: ;[native] set register
	mov	di,	[ss:bp-4]
;PE_000003FC: [native] inline
	mov	al,	[es:di]
;PE_00000407: [native] inline
	mov	ah,	0
;PE_00000412: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000417: stloc.s 04
;	pop	word [ss:bp-10]	; [optimize] ignore
	mov	word [ss:bp-10],	ax	; [optimize] add
;PE_00000419: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000041A: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000041B: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000041D: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
;PE_0000041E: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000420: ldc.i4.s 0D
;	mov	ax,	13	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000422: beq.s 0A
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-10],	13	; [optimize] add
	je	PE_0000042E
;PE_00000424: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000426: ldc.i4.s 0A
;	mov	ax,	10	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000428: beq.s 04
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-10],	10	; [optimize] add
	je	PE_0000042E
PE_0000042A: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000042B: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000042C: blt.s C8
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-4]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_000003F6
PE_0000042E: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000042F: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000430: blt FFFFFF69
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-4]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_0000039E
PE_00000435: ;ret
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.SecondBoot::SetVesaMode()
Mona_SecondBoot__SetVesaMode:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_00000444: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000445: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000044A: ldsfld 04000010
	push	word [cs:Mona_VESA__Resolution]
;PE_0000044F: stloc.0
	pop	word [ss:bp-2]
;PE_00000450: ldc.i4 0000010F
	mov	ax,	271
;	push	ax	; [optimize] ignore
;PE_00000455: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000456: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000457: ldc.i4 00000140
	mov	ax,	320
;	push	ax	; [optimize] ignore
;PE_0000045C: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000463
;PE_0000045E: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000045F: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000460: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000462: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000463: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000464: ldc.i4 00000280
	mov	ax,	640
;	push	ax	; [optimize] ignore
;PE_00000469: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000470
;PE_0000046B: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000046C: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000046D: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000046F: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000470: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000471: ldc.i4 00000320
	mov	ax,	800
;	push	ax	; [optimize] ignore
;PE_00000476: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_0000047D
;PE_00000478: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000479: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000047A: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000047C: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_0000047D: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000047E: ldc.i4 00000400
	mov	ax,	1024
;	push	ax	; [optimize] ignore
;PE_00000483: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_0000048A
;PE_00000485: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000486: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000487: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000489: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_0000048A: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000048B: ldc.i4 00000500
	mov	ax,	1280
;	push	ax	; [optimize] ignore
;PE_00000490: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000497
;PE_00000492: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000493: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000494: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000496: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000497: ;ldsfld 04000011
	push	word [cs:Mona_VESA__Bpp]
;PE_0000049C: stloc.2
	pop	word [ss:bp-6]
;PE_0000049D: br.s 35
	jmp	PE_000004D4
PE_0000049F: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000004A0: ldc.i4.s 10
	mov	ax,	16
;	push	ax	; [optimize] ignore
;PE_000004A2: ble.s 13
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-6]	; [optimize] add
	jnc near	PE_000004B7
;PE_000004A4: ldloc.1
	push	word [ss:bp-4]
;PE_000004A5: ldc.i4 00000800
	mov	ax,	2048
	push	ax
;PE_000004AA: ldc.i4 00000830
	mov	ax,	2096
	push	ax
;PE_000004AF: call 06000018
	call	boolean__Mona_VESA__TryMode__u2_u2_u2
;	push	ax	; [optimize] ignore
;PE_000004B4: brfalse.s 01
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000004B7
;PE_000004B6: ret
	jmp	PE_000004F6	; [optimize] modify
PE_000004B7: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000004B8: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004B9: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	1	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	1	; [optimize] add, [optimize] ignore
;	dec	ax	; [Optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004BB: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	dec	word [ss:bp-4]	; [optimize] add
;PE_000004BC: ldloc.1
	push	word [ss:bp-4]
;PE_000004BD: ldc.i4 00000800
	mov	ax,	2048
	push	ax
;PE_000004C2: ldc.i4 00000830
	mov	ax,	2096
	push	ax
;PE_000004C7: call 06000018
	call	boolean__Mona_VESA__TryMode__u2_u2_u2
;	push	ax	; [optimize] ignore
;PE_000004CC: brfalse.s 01
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000004CF
;PE_000004CE: ret
	jmp	PE_000004F6	; [optimize] modify
PE_000004CF: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000004D0: ldc.i4.2
;	mov	ax,	2	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004D1: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	2	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	2	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004D3: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	sub	word [ss:bp-4],	2	; [optimize] add
PE_000004D4: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000004D5: ldc.i4 0000010E
;	mov	ax,	270	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004DA: bge.s C3
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	270	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	270	; [optimize] add
	jnc	PE_0000049F
;PE_000004DC: [native] set register
	mov	di,	2048
;PE_000004E6: [native] inline
	mov	byte [es:di],	'N'
;PE_000004F1: call 0600001C
	call	Mona_VESA__SetVGA
PE_000004F6: ;ret
	mov	sp,	bp
	pop	bp
	ret

; u2 Mona.SecondBoot::ReadFile(u2, string)
u2__Mona_SecondBoot__ReadFile__u2_string:
	push	bp
	mov	bp,	sp
	sub	sp,	4
;PE_00000504: ldstr 70000219
	mov	ax,	US_00000219
	push	ax
;PE_00000509: call 06000020
	call	Mona_Console__Write__string
;PE_0000050E: ldarg.1
	push	word [ss:bp+4]
;PE_0000050F: call 06000020
	call	Mona_Console__Write__string
;PE_00000514: ldc.i4.s 20
	mov	ax,	32
	push	ax
;PE_00000516: call 0600001F
	call	Mona_Console__Write__char
;PE_0000051B: ldarg.1
	push	word [ss:bp+4]
;PE_0000051C: call 06000010
	call	u2__Mona_FDC__SearchFile__string
;	push	ax	; [optimize] ignore
;PE_00000521: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000522: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000523: brtrue.s 11
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	or	ax,	ax
	jnz	PE_00000536
;PE_00000525: call 06000021
	call	Mona_Console__WriteLine
;PE_0000052A: ldstr 7000022B
	mov	ax,	US_0000022B
	push	ax
;PE_0000052F: call 06000022
	call	Mona_Console__WriteLine__string
;PE_00000534: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000535: ret
	jmp	PE_00000592	; [optimize] modify
PE_00000536: ;[native] inline
	push	es
;PE_00000541: ldarg.0
	push	word [ss:bp+6]
;PE_00000542: [native] set register
	pop	es
;PE_00000547: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000548: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
PE_00000549: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000054A: ldc.i4.s 1F
	mov	ax,	31
;	push	ax	; [optimize] ignore
;PE_0000054C: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
	push	ax
;PE_0000054E: ldc.i4.1
	mov	ax,	1
	push	ax
;PE_0000054F: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000550: call 06000012
	call	Mona_FDC__ReadSectors__u2_u2_u2
;PE_00000555: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000556: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000557: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000559: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
;PE_0000055A: [native] get register
;	push	es	; [optimize] ignore
;PE_0000055F: ldc.i4.s 20
	mov	ax,	32
;	push	ax	; [optimize] ignore
;PE_00000561: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	es	; [optimize] add
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_00000563: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_00000568: ldstr 70000265
	mov	ax,	US_00000265
	push	ax
;PE_0000056D: call 06000020
	call	Mona_Console__Write__string
;PE_00000572: ldloc.0
	push	word [ss:bp-2]
;PE_00000573: call 06000011
	call	u2__Mona_FDC__GetFAT__u2
;	push	ax	; [optimize] ignore
;PE_00000578: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000579: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000057A: ldc.i4 00000FFF
;	mov	ax,	4095	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000057F: bne.un.s C8
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-2],	4095	; [optimize] add
	jne	PE_00000549
;PE_00000581: [native] inline
	pop	es
;PE_0000058C: call 06000021
	call	Mona_Console__WriteLine
;PE_00000591: ldloc.1
	push	word [ss:bp-4]
PE_00000592: ;ret
	pop	ax
	mov	sp,	bp
	pop	bp
	ret	4

; void Mona.SecondBoot::WriteSize(u2)
Mona_SecondBoot__WriteSize__u2:
	push	bp
	mov	bp,	sp
;PE_000005A0: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000005A1: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_000005A6: ldsfld 04000007
;	push	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
;PE_000005AB: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] add
;PE_000005B0: [native] set register
	mov	ax,	[ss:bp+4]
;PE_000005B6: [native] inline
	mov	[es:di],	ax
;PE_000005C1: [native] set register
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;PE_000005C7: [native] inline
	mov	[es:di+2],	ax
;PE_000005D2: ldsfld 04000007
;	push	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
;PE_000005D7: ldc.i4.4
;	mov	ax,	4	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000005D8: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000005DA: stsfld 04000007
;	pop	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
;	mov	word [cs:Mona_SecondBoot__sizeptr],	ax	; [optimize] add, [optimize] ignore
	add	word [cs:Mona_SecondBoot__sizeptr],	4	; [optimize] add
;PE_000005DF: ret
	pop	bp
	ret	2

; void Mona.SecondBoot::.cctor()
Mona_SecondBoot___cctor:
;PE_000005EC: ldc.i4 00000120
	mov	ax,	288
;	push	ax	; [optimize] ignore
;PE_000005F1: stsfld 04000006
;	pop	word [cs:Mona_SecondBoot__fileseg]	; [optimize] ignore
	mov	word [cs:Mona_SecondBoot__fileseg],	ax	; [optimize] add
;PE_000005F6: ldc.i4 00001104
	mov	ax,	4356
;	push	ax	; [optimize] ignore
;PE_000005FB: stsfld 04000007
;	pop	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
	mov	word [cs:Mona_SecondBoot__sizeptr],	ax	; [optimize] add
;PE_00000600: ret
	ret

; class Mona.Str

; u2 Mona.Str::GetLength(string)
u2__Mona_Str__GetLength__string:
	push	bp
	mov	bp,	sp
;PE_00000624: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_0000062A: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+4]	; [optimize] add
;PE_0000062F: [native] inline
	mov	al,	[si]
;PE_0000063A: [native] inline
	mov	ah,	0
;PE_00000645: [native] get register
;	push	ax	; [optimize] ignore
;PE_0000064A: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	2

; boolean Mona.Str::StartsWith(string, u2)
boolean__Mona_Str__StartsWith__string_u2:
	push	bp
	mov	bp,	sp
;PE_00000658: ldarg.0
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_0000065E: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+6]	; [optimize] add
;PE_00000663: [native] inline
	mov	cl,	[si]
;PE_0000066E: [native] inline
	mov	ch,	0
;PE_00000679: [native] inline
	inc	si
;PE_00000684: [native] set register
	mov	di,	[ss:bp+4]
;PE_0000068A: [native] inline
	rep	cmpsb
;PE_00000695: [native] get flag
	jz	NM_00000000
	xor	ax,	ax
	jmp	NM_00000001
NM_00000000: ;[native] get flag internal
	mov	ax,	1
NM_00000001: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_0000069A: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	4

; u2 Mona.Str::ReadNumber(u2)
u2__Mona_Str__ReadNumber__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	4
;PE_000006A8: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000006A9: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006AA: [native] set register
	mov	di,	[ss:bp+4]
PE_000006B0: ;[native] inline
	mov	al,	[es:di]
;PE_000006BB: [native] inline
	mov	ah,	0
;PE_000006C6: [native] inline
	inc	di
;PE_000006D1: [native] get register
;	push	ax	; [optimize] ignore
;PE_000006D6: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000006D7: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000006D8: ldc.i4.s 30
;	mov	ax,	48	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006DA: blt.s 16
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	48	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	48	; [optimize] add
	jc	PE_000006F2
;PE_000006DC: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000006DD: ldc.i4.s 39
	mov	ax,	57
;	push	ax	; [optimize] ignore
;PE_000006DF: bgt.s 11
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-4]	; [optimize] add
	jc	PE_000006F2
;PE_000006E1: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006E2: ldc.i4.s 0A
	mov	ax,	10
;	push	ax	; [optimize] ignore
;PE_000006E4: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_000006E6: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006E7: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006E8: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000006E9: ldc.i4.s 30
;	mov	ax,	48	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006EB: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	48	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-4]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	48	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000006ED: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000006EF: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006F0: br.s BE
	jmp	PE_000006B0
PE_000006F2: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006F3: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; class Mona.A20

; void Mona.A20::Enable()
Mona_A20__Enable:
;PE_00000714: call 0600000E
	call	Mona_A20__Wait
;PE_00000719: ldc.i4.s 64
;	mov	ax,	100	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	100	; [optimize] add
;PE_0000071B: ldc.i4 000000D1
	mov	ax,	209
;	push	ax	; [optimize] ignore
;PE_00000720: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_00000725: call 0600000E
	call	Mona_A20__Wait
;PE_0000072A: ldc.i4.s 60
;	mov	ax,	96	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	96	; [optimize] add
;PE_0000072C: ldc.i4 000000DF
	mov	ax,	223
;	push	ax	; [optimize] ignore
;PE_00000731: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_00000736: call 0600000E
	call	Mona_A20__Wait
;PE_0000073B: ldc.i4.s 64
;	mov	ax,	100	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	100	; [optimize] add
;PE_0000073D: ldc.i4 000000FF
	mov	ax,	255
;	push	ax	; [optimize] ignore
;PE_00000742: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_00000747: ret
	ret

; void Mona.A20::Wait()
Mona_A20__Wait:
PE_00000754: ;[native] in
	in	al,	100
	mov	ah,	0
;	push	ax	; [optimize] ignore
	mov	dx,	ax	; [optimize] add
;PE_0000075B: ldc.i4.2
	mov	ax,	2
;	push	ax	; [optimize] ignore
;PE_0000075C: and
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	and	ax,	dx
;	push	ax	; [optimize] ignore
;PE_0000075D: brtrue.s F5
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000754
;PE_0000075F: ret
	ret

; class Mona.FDC

Mona_FDC__buffer dw 0

; u2 Mona.FDC::SearchFile(string)
u2__Mona_FDC__SearchFile__string:
	push	bp
	mov	bp,	sp
	sub	sp,	8
;PE_00000780: [native] inline
	push	es
;PE_0000078B: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_00000790: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_00000795: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000796: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000797: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000798: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000799: ldarg.0
	push	word [ss:bp+4]
;PE_0000079A: call 06000015
	call	string__Mona_FDC__ConvertFileName__string
;	push	ax	; [optimize] ignore
;PE_0000079F: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_000007A0: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000007A1: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_000007A2: br.s 31
	jmp	PE_000007D5
PE_000007A4: ;ldloc.2
	push	word [ss:bp-6]
;PE_000007A5: ldloc.0
	push	word [ss:bp-2]
;PE_000007A6: call 0600000A
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_000007AB: brfalse.s 1D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000007CA
;PE_000007AD: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000007AE: ldc.i4.s 1A
	mov	ax,	26
;	push	ax	; [optimize] ignore
;PE_000007B0: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000007B2: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_000007B7: [native] inline
	mov	ax,	[es:di]
;PE_000007C2: [native] get register
;	push	ax	; [optimize] ignore
;PE_000007C7: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000007C8: br.s 13
	jmp	PE_000007DD
PE_000007CA: ;ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000007CB: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007CC: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007CE: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
;	mov	word [ss:bp-8],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-8],	1	; [optimize] add
;PE_000007CF: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000007D0: ldc.i4.s 20
;	mov	ax,	32	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007D2: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007D4: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-2],	32	; [optimize] add
PE_000007D5: ;ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000007D6: ldc.i4 000000E0
;	mov	ax,	224	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007DB: blt.s C7
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	224	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-8],	224	; [optimize] add
	jc	PE_000007A4
PE_000007DD: ;[native] inline
	pop	es
;PE_000007E8: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000007E9: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-4]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; u2 Mona.FDC::GetFAT(u2)
u2__Mona_FDC__GetFAT__u2:
	push	bp
	mov	bp,	sp
;PE_000007F8: [native] set register
	mov	si,	[ss:bp+4]
;PE_000007FE: [native] inline
	push	es
;PE_00000809: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_0000080E: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_00000813: ldc.i4 00006000
;	mov	ax,	24576	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	24576	; [optimize] add, [optimize] ignore
;PE_00000818: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_00000819: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+4]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	24576	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000081B: [native] set register
;	pop	bx	; [optimize] ignore
	mov	bx,	ax	; [optimize] add
;PE_00000820: [native] inline
	shr	si,	1
;PE_0000082B: [native] inline
	mov	cx,	[es:si+bx]
;PE_00000836: [native] get flag
	jc	NM_00000002
	xor	ax,	ax
	jmp	NM_00000003
NM_00000002: ;[native] get flag internal
	mov	ax,	1
NM_00000003: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_0000083B: brfalse.s 0D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_0000084A
;PE_0000083D: [native] inline
	shr	cx,	4
;PE_00000848: br.s 0B
	jmp	PE_00000855
PE_0000084A: ;[native] inline
	and	ch,	0x0f
PE_00000855: ;[native] inline
	pop	es
;PE_00000860: [native] get register
;	push	cx	; [optimize] ignore
;PE_00000865: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	cx	; [optimize] add
	pop	bp
	ret	2

; void Mona.FDC::ReadSectors(u2, u2, u2)
Mona_FDC__ReadSectors__u2_u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	12
;PE_00000874: [native] inline
	push	es
;PE_0000087F: br 00000099
	jmp	PE_0000091D
PE_00000884: ;ldarg.2
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_00000886: neg
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+4]	; [optimize] add
	neg	ax
;	push	ax	; [optimize] ignore
;PE_00000888: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000889: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000088A: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000088B: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	1	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	1	; [optimize] add, [optimize] ignore
;	dec	ax	; [Optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000088D: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	dec	word [ss:bp-2]	; [optimize] add
;PE_0000088E: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000088F: ldc.i4.s 09
;	mov	ax,	9	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000891: shr
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	9	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	shr	ax,	cl
;	push	ax	; [optimize] ignore
;PE_00000893: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000894: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000895: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000896: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000898: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-2],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-2]	; [Optimize] add
;PE_00000899: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000089A: ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_0000089B: ble.s 68
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+6]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000905
;PE_0000089D: ldarg.1
	push	word [ss:bp+6]
;PE_0000089E: stloc.0
	pop	word [ss:bp-2]
;PE_0000089F: br.s 64
	jmp	PE_00000905
PE_000008A1: ;ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000008A2: ldc.i4.s 24
;	mov	ax,	36	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008A4: div
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	36	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+8]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	ax	; [optimize] ignore
;PE_000008A5: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008A6: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000008A7: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000008A8: ldc.i4.s 24
;	mov	ax,	36	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008AA: rem
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	36	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+8]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	dx	; [optimize] ignore
;PE_000008AB: conv.u1
;	pop	ax	; [optimize] ignore
;	mov	ax,	dx	; [optimize] add, [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008AC: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
;	mov	word [ss:bp-6],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-6],	dx	; [optimize] add
;PE_000008AD: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000008AE: ldc.i4.s 12
;	mov	ax,	18	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008B0: div
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	18	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	ax	; [optimize] ignore
;PE_000008B1: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008B2: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_000008B3: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000008B4: ldc.i4.s 12
;	mov	ax,	18	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008B6: rem
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	18	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	dx	; [optimize] ignore
;PE_000008B7: conv.u1
;	pop	ax	; [optimize] ignore
;	mov	ax,	dx	; [optimize] add, [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008B8: stloc.s 04
;	pop	word [ss:bp-10]	; [optimize] ignore
;	mov	word [ss:bp-10],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-10],	dx	; [optimize] add
;PE_000008BA: ldc.i4.s 12
	mov	ax,	18
;	push	ax	; [optimize] ignore
;PE_000008BC: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_000008BE: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-10]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000008BF: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008C0: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
;PE_000008C2: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_000008C4: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008C5: ble.s 04
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-12]	; [optimize] add
	jnc near	PE_000008CB
;PE_000008C7: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008C8: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008C9: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
PE_000008CB: ;ldloc.s 05
	push	word [ss:bp-12]
;PE_000008CD: ldarg.2
	push	word [ss:bp+4]
;PE_000008CE: ldloc.1
	push	word [ss:bp-4]
;PE_000008CF: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_000008D1: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_000008D2: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-10]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000008D3: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
	push	ax
;PE_000008D4: ldloc.3
	push	word [ss:bp-8]
;PE_000008D5: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_000008D6: call 06000013
	call	boolean__Mona_FDC__Read__u1_u2_u1_u1_u1_u1
;	push	ax	; [optimize] ignore
;PE_000008DB: brtrue.s 09
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_000008E6
;PE_000008DD: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_000008DE: call 06000014
	call	boolean__Mona_FDC__Reset__u1
;	push	ax	; [optimize] ignore
;PE_000008E3: pop
;	pop	ax	; [optimize] ignore
;PE_000008E4: br.s 1F
	jmp	PE_00000905
PE_000008E6: ;ldarg.2
	push	word [ss:bp+4]
;PE_000008E7: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_000008E9: ldc.i4.s 09
;	mov	ax,	9	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008EB: shl
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	9	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-12]	; [optimize] add
	shl	ax,	cl
;	push	ax	; [optimize] ignore
;PE_000008ED: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_000008EF: starg.s 02
;	pop	word [ss:bp+4]	; [optimize] ignore
	mov	word [ss:bp+4],	ax	; [optimize] add
;PE_000008F1: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000008F2: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_000008F4: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-12]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+8]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp+8]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000008F6: starg.s 00
;	pop	word [ss:bp+8]	; [optimize] ignore
	mov	word [ss:bp+8],	ax	; [optimize] add
;PE_000008F8: ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_000008F9: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_000008FB: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+6]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-12]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000008FD: starg.s 01
;	pop	word [ss:bp+6]	; [optimize] ignore
	mov	word [ss:bp+6],	ax	; [optimize] add
;PE_000008FF: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000900: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000902: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-12]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000904: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
PE_00000905: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000906: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000907: bgt.s 98
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jc	PE_000008A1
;PE_00000909: [native] get register
;	push	es	; [optimize] ignore
;PE_0000090E: ldc.i4 00001000
	mov	ax,	4096
;	push	ax	; [optimize] ignore
;PE_00000913: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	es	; [optimize] add
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_00000915: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000091A: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000091B: starg.s 02
;	pop	word [ss:bp+4]	; [optimize] ignore
	mov	word [ss:bp+4],	ax	; [optimize] add
PE_0000091D: ;ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_0000091E: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000091F: bgt FFFFFF60
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp+6]	; [optimize] add
	jc	PE_00000884
;PE_00000924: [native] inline
	pop	es
;PE_0000092F: ret
	mov	sp,	bp
	pop	bp
	ret	6

; boolean Mona.FDC::Read(u1, u2, u1, u1, u1, u1)
boolean__Mona_FDC__Read__u1_u2_u1_u1_u1_u1:
	push	bp
	mov	bp,	sp
;PE_0000093C: [native] set register
	mov	ah,	2
;PE_00000942: [native] set register
	mov	al,	[ss:bp+14]
;PE_00000948: [native] set register
	mov	bx,	[ss:bp+12]
;PE_0000094E: [native] set register
	mov	ch,	[ss:bp+10]
;PE_00000954: [native] set register
	mov	cl,	[ss:bp+8]
;PE_0000095A: [native] set register
	mov	dh,	[ss:bp+6]
;PE_00000961: [native] set register
	mov	dl,	[ss:bp+4]
;PE_00000968: [native] inline
	int	0x13
;PE_00000973: [native] get flag
	jnc	NM_00000004
	xor	ax,	ax
	jmp	NM_00000005
NM_00000004: ;[native] get flag internal
	mov	ax,	1
NM_00000005: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_00000978: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	12

; boolean Mona.FDC::Reset(u1)
boolean__Mona_FDC__Reset__u1:
	push	bp
	mov	bp,	sp
;PE_00000988: [native] set register
	mov	ah,	0
;PE_0000098E: [native] set register
	mov	dl,	[ss:bp+4]
;PE_00000994: [native] inline
	int	0x13
;PE_0000099F: [native] get flag
	jnc	NM_00000006
	xor	ax,	ax
	jmp	NM_00000007
NM_00000006: ;[native] get flag internal
	mov	ax,	1
NM_00000007: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_000009A4: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	2

; string Mona.FDC::ConvertFileName(string)
string__Mona_FDC__ConvertFileName__string:
	push	bp
	mov	bp,	sp
	sub	sp,	8
;PE_000009B4: ldarg.0
	push	word [ss:bp+4]
;PE_000009B5: call 06000009
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_000009BA: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000009BB: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_000009C1: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_000009C2: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp+4]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000009C4: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	ax	; [optimize] add
;PE_000009C9: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_000009D3: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_000009D4: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_FDC__buffer]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000009D6: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_000009DB: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000009DC: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000009DD: br.s 1D
	jmp	PE_000009FC
PE_000009DF: ;[native] inline
	mov	byte [cs:di],	' '
;PE_000009EA: [native] get register
;	push	di	; [optimize] ignore
;PE_000009EF: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000009F0: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	di	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	di	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000009F2: [native] set register
;	pop	di	; [optimize] ignore
;	mov	di,	ax	; [optimize] add, [optimize] ignore
;	add	di,	1	; [optimize] add, [optimize] ignore
	inc	di	; [Optimize] add
;PE_000009F7: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000009F8: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000009F9: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000009FB: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
PE_000009FC: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000009FD: ldc.i4.s 0B
;	mov	ax,	11	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000009FF: blt.s DE
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	11	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	11	; [optimize] add
	jc	PE_000009DF
;PE_00000A01: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_00000A0B: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_00000A0C: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_FDC__buffer]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A0E: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_00000A13: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A14: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_00000A15: br.s 5B
	jmp	PE_00000A72
PE_00000A17: ;[native] inline
	mov	al,	[cs:si]
;PE_00000A22: [native] set register
	mov	ah,	0
;PE_00000A28: [native] get register
;	push	si	; [optimize] ignore
;PE_00000A2D: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A2E: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	si	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	si	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A30: [native] set register
;	pop	si	; [optimize] ignore
;	mov	si,	ax	; [optimize] add, [optimize] ignore
;	add	si,	1	; [optimize] add, [optimize] ignore
	inc	si	; [Optimize] add
;PE_00000A35: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000A3A: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_00000A3B: ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_00000A3C: ldc.i4.s 2E
;	mov	ax,	46	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A3E: bne.un.s 15
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-8],	46	; [optimize] add
	jne	PE_00000A55
;PE_00000A40: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_00000A4A: ldc.i4.s 09
	mov	ax,	9
;	push	ax	; [optimize] ignore
;PE_00000A4C: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_FDC__buffer]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A4E: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_00000A53: br.s 18
	jmp	PE_00000A6D
PE_00000A55: ;[native] inline
	mov	[cs:di],	al
;PE_00000A60: [native] get register
;	push	di	; [optimize] ignore
;PE_00000A65: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A66: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	di	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	di	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A68: [native] set register
;	pop	di	; [optimize] ignore
;	mov	di,	ax	; [optimize] add, [optimize] ignore
;	add	di,	1	; [optimize] add, [optimize] ignore
	inc	di	; [Optimize] add
PE_00000A6D: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000A6E: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A6F: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A71: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
;	mov	word [ss:bp-6],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-6],	1	; [optimize] add
PE_00000A72: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000A73: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000A74: blt.s A1
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-6]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_00000A17
;PE_00000A76: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_00000A7B: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.FDC::.cctor()
Mona_FDC___cctor:
;PE_00000A88: ldstr 700003F5
	mov	ax,	US_000003F5
;	push	ax	; [optimize] ignore
;PE_00000A8D: stsfld 0400000C
;	pop	word [cs:Mona_FDC__buffer]	; [optimize] ignore
	mov	word [cs:Mona_FDC__buffer],	ax	; [optimize] add
;PE_00000A92: ret
	ret

; class Mona.VESA

Mona_VESA__Resolution dw 0
Mona_VESA__Bpp dw 0

; boolean Mona.VESA::TryMode(u2, u2, u2)
boolean__Mona_VESA__TryMode__u2_u2_u2:
	push	bp
	mov	bp,	sp
;PE_00000AB4: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_00000AB5: ldc.i4 00004000
	mov	ax,	16384
;	push	ax	; [optimize] ignore
;PE_00000ABA: or
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+8]	; [optimize] add, [optimize] ignore
;	or	ax,	dx	; [optimize] ignore
	or	ax,	word [ss:bp+8]	; [optimize] add
	push	ax
;PE_00000ABC: call 06000019
	call	boolean__Mona_VESA__SetMode__u2
;	push	ax	; [optimize] ignore
;PE_00000AC1: brtrue.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000AC5
;PE_00000AC3: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000AC4: ret
	jmp	PE_00000ADB	; [optimize] modify
PE_00000AC5: ;ldarg.1
	push	word [ss:bp+6]
;PE_00000AC6: call 0600001A
	call	boolean__Mona_VESA__GetInfo__u2
;	push	ax	; [optimize] ignore
;PE_00000ACB: brtrue.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000ACF
;PE_00000ACD: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000ACE: ret
	jmp	PE_00000ADB	; [optimize] modify
PE_00000ACF: ;ldarg.0
	push	word [ss:bp+8]
;PE_00000AD0: ldarg.2
	push	word [ss:bp+4]
;PE_00000AD1: call 0600001B
	call	boolean__Mona_VESA__GetInfoDetails__u2_u2
;	push	ax	; [optimize] ignore
;PE_00000AD6: brtrue.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000ADA
;PE_00000AD8: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000AD9: ret
	jmp	PE_00000ADB	; [optimize] modify
PE_00000ADA: ;ldc.i4.1
	mov	ax,	1
	push	ax
PE_00000ADB: ;ret
	pop	ax
	pop	bp
	ret	6

; boolean Mona.VESA::SetMode(u2)
boolean__Mona_VESA__SetMode__u2:
	push	bp
	mov	bp,	sp
;PE_00000AE8: [native] set register
	mov	ax,	20226
;PE_00000AF2: [native] set register
	mov	bx,	[ss:bp+4]
;PE_00000AF8: [native] inline
	int	0x10
;PE_00000B03: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000B08: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000B0A: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	dx,	79	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_00000008
	xor	ax,	ax
	jmp	NM_00000009
NM_00000008: ;ceq internal
	mov	ax,	1
NM_00000009: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000B0C: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	2

; boolean Mona.VESA::GetInfo(u2)
boolean__Mona_VESA__GetInfo__u2:
	push	bp
	mov	bp,	sp
;PE_00000B1C: [native] set register
	mov	ax,	20224
;PE_00000B26: [native] set register
	mov	di,	[ss:bp+4]
;PE_00000B2C: [native] inline
	int	0x10
;PE_00000B37: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000B3C: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000B3E: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	dx,	79	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_0000000A
	xor	ax,	ax
	jmp	NM_0000000B
NM_0000000A: ;ceq internal
	mov	ax,	1
NM_0000000B: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000B40: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	2

; boolean Mona.VESA::GetInfoDetails(u2, u2)
boolean__Mona_VESA__GetInfoDetails__u2_u2:
	push	bp
	mov	bp,	sp
;PE_00000B50: [native] set register
	mov	ax,	20225
;PE_00000B5A: [native] set register
	mov	cx,	[ss:bp+6]
;PE_00000B60: [native] set register
	mov	di,	[ss:bp+4]
;PE_00000B66: [native] inline
	int	0x10
;PE_00000B71: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000B76: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000B78: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	dx,	79	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_0000000C
	xor	ax,	ax
	jmp	NM_0000000D
NM_0000000C: ;ceq internal
	mov	ax,	1
NM_0000000D: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000B7A: ret
;	pop	ax	; [optimize] ignore
	pop	bp
	ret	4

; void Mona.VESA::SetVGA()
Mona_VESA__SetVGA:
;PE_00000B88: [native] set register
	mov	ax,	18
;PE_00000B8F: [native] inline
	int	0x10
;PE_00000B9A: ret
	ret

; void Mona.VESA::.cctor()
Mona_VESA___cctor:
;PE_00000BA8: ldc.i4 00000320
	mov	ax,	800
;	push	ax	; [optimize] ignore
;PE_00000BAD: stsfld 04000010
;	pop	word [cs:Mona_VESA__Resolution]	; [optimize] ignore
	mov	word [cs:Mona_VESA__Resolution],	ax	; [optimize] add
;PE_00000BB2: ldc.i4.s 20
	mov	ax,	32
;	push	ax	; [optimize] ignore
;PE_00000BB4: stsfld 04000011
;	pop	word [cs:Mona_VESA__Bpp]	; [optimize] ignore
	mov	word [cs:Mona_VESA__Bpp],	ax	; [optimize] add
;PE_00000BB9: ret
	ret

; class Mona.Console

; void Mona.Console::Write(char)
Mona_Console__Write__char:
	push	bp
	mov	bp,	sp
;PE_00000BDC: [native] set register
	mov	ax,	[ss:bp+4]
;PE_00000BE2: [native] set register
	mov	ah,	14
;PE_00000BE9: [native] set register
;	mov	bx,	0	; [optimize] ignore
	xor	bx,	bx	; [optimize] add
;PE_00000BEF: [native] inline
	int	0x10
;PE_00000BFA: ret
	pop	bp
	ret	2

; void Mona.Console::Write(string)
Mona_Console__Write__string:
	push	bp
	mov	bp,	sp
	sub	sp,	4
;PE_00000C08: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_00000C0E: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+4]	; [optimize] add
;PE_00000C13: [native] inline
	cs	lodsb
;PE_00000C1E: [native] set register
	mov	ah,	0
;PE_00000C24: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000C29: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000C2A: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000C2B: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000C2C: br.s 27
	jmp	PE_00000C55
PE_00000C2E: ;[native] inline
	cs	lodsb
;PE_00000C39: [native] set register
	mov	ah,	14
;PE_00000C40: [native] set register
;	mov	bx,	0	; [optimize] ignore
	xor	bx,	bx	; [optimize] add
;PE_00000C46: [native] inline
	int	0x10
;PE_00000C51: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000C52: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000C53: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000C54: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
PE_00000C55: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000C56: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000C57: blt.s D5
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-4]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_00000C2E
;PE_00000C59: ret
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.Console::WriteLine()
Mona_Console__WriteLine:
;PE_00000C68: ldstr 70000431
	mov	ax,	US_00000431
	push	ax
;PE_00000C6D: call 06000020
	call	Mona_Console__Write__string
;PE_00000C72: ret
	ret

; void Mona.Console::WriteLine(string)
Mona_Console__WriteLine__string:
	push	bp
	mov	bp,	sp
;PE_00000C80: ldarg.0
	push	word [ss:bp+4]
;PE_00000C81: call 06000020
	call	Mona_Console__Write__string
;PE_00000C86: call 06000021
	call	Mona_Console__WriteLine
;PE_00000C8B: ret
	pop	bp
	ret	2

US_00000001 db 5, "/\ /\", 0x00
US_0000000D db 23, " 'V `) < Booting MONA!!", 0x00
US_00000045 db 10, "KERNEL.BIN", 0x00
US_0000005B db 8, "FILE.BIN", 0x00
US_0000006D db 11, "PROCESS.BIN", 0x00
US_00000085 db 11, "MONITOR.BIN", 0x00
US_0000009D db 8, "MONA.CFG", 0x00
US_000000AF db 14, "Boot failure!!", 0x00
US_000000CD db 18, "System has halted.", 0x00
US_000000FB db 33, "Default settings will be applied.", 0x00
US_00000183 db 16, "VESA_RESOLUTION=", 0x00
US_000001A5 db 9, "VESA_BPP=", 0x00
US_00000219 db 8, "Reading ", 0x00
US_0000022B db 20, "ERROR: can not find!", 0x00
US_00000265 db 1, ".", 0x00
US_000003F5 db 11, "           ", 0x00
US_00000431 db 2, 0x0d, 0x0a, 0x00

; --- BEGIN: secondboot32.asm

%define KERNEL_SEG 0x0100

;-------------------------------------------------------------------------------
; entry point
;-------------------------------------------------------------------------------

SecondBootMain:
        call    ILMain

        mov     ax, cs
        mov     ds, ax
        mov     si, RealToProtect
        mov     ax, KERNEL_SEG
        mov     es, ax
        xor     di, di
        mov     cx, gdt_end - RealToProtect
        rep     movsb

        jmp     KERNEL_SEG:0

;-------------------------------------------------------------------------------
; To Protect mode
;-------------------------------------------------------------------------------
RealToProtect:
;;; Real to Protect
        mov     ax, cs          ; we jump from firstboot
        mov     ds, ax          ; so ds is changed
        lgdt    [gdtr - RealToProtect]  ; load gdtr
        cli                     ; disable interrupt
        mov     eax, cr0        ; real
        or      eax, 1          ; to
        mov     cr0, eax        ; protect
        jmp     flush_q1
flush_q1:
	jmp     0x0008:(KERNEL_SEG * 16 + set_cs_desc1) - RealToProtect

[bits 32]
set_cs_desc1:
        mov     ax, 0x10        ; ds & es
        mov     ds, ax          ; selector is
        mov     es, ax          ; 0x10
        mov     ax, 0x18        ; ss selector
        mov     ss, ax          ; is 0x18
        mov     esp, 0x80000    ; sp is 3MB
        push    eax
        jmp     0x0200 + RealToProtect

;-------------------------------------------------------------------------------
; GDT definition: It is temporary.
;-------------------------------------------------------------------------------
gdtr:
        dw gdt_end - gdt0 - 1   ; gdt limit
        dd (KERNEL_SEG * 16 + gdt0) - RealToProtect  ; start adderess

gdt0:                           ; segment 00
        dw 0                    ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0                    ; segment type
        db 0                    ; segment limitH
        db 0                    ; segment baseH

gdt08:                          ; segment 08(code segment)
        dw 0xffff               ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x9a                 ; Type Code
        db 0xff                 ; segment limitH
        db 0                    ; segment baseH

gdt10:                          ; segment 10(data segment)
        dw 0xffff               ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x92                 ; Type Data
        db 0xff                 ; segment limitH
        db 0                    ; segment baseH

gdt18:                          ; segment 18(stack segment)
        dw 0                    ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x96                 ; Type Stack
        db 0xC0                 ; segment limitH
        db 0                    ; segment baseH

gdt_end:                        ; end of gdt

; --- END
