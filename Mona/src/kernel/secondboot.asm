; This file was automatically generated by IL2Asm16.
[bits 16]
jmp SecondBootMain

ILMain:
	call	Mona_VESA___cctor
	call	Mona_SecondBoot__Main
	ret

; class <Module>

; class Mona.SecondBoot

; void Mona.SecondBoot::Main()
Mona_SecondBoot__Main:
;PE_0000025C: [native] inline
	cli
;PE_00000267: call 06000009
	call	Mona_A20__Enable
;PE_0000026C: [native] inline
	push	ds
;PE_00000277: call 06000002
	call	Mona_SecondBoot__ReadConfig
;PE_0000027C: [native] inline
	pop	ds
;PE_00000287: call 06000003
	call	Mona_SecondBoot__SetVesaMode
;PE_0000028C: ret
	ret

; void Mona.SecondBoot::ReadConfig()
Mona_SecondBoot__ReadConfig:
	push	bp
	mov	bp,	sp
	sub	sp,	14
;PE_0000029C: [native] get register
	push	cs
;PE_000002A1: [native] set register
	pop	ds
;PE_000002A6: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_000002AB: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_000002B0: ldstr 70000027
	mov	ax,	US_00000027
	push	ax
;PE_000002B5: call 0600000C
	call	u2__Mona_FDC__SearchFile__string
;	push	ax	; [optimize] ignore
;PE_000002BA: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000002BB: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000002BC: brtrue.s 05
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	or	ax,	ax	; [optimize] ignore
	or	ax,	word [ss:bp-2]	; [optimize] add
	jnz	PE_000002C3
;PE_000002BE: br 000000F5
	jmp	PE_000003B8
PE_000002C3: ;ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_000002C8: [native] set register
;	pop	ds	; [optimize] ignore
	mov	ds,	ax	; [optimize] add
;PE_000002CD: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000002CE: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-4],	0	; [optimize] add
;PE_000002CF: br.s 26
	jmp	PE_000002F7
PE_000002D1: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000002D2: ldc.i4.s 1F
	mov	ax,	31
;	push	ax	; [optimize] ignore
;PE_000002D4: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
	push	ax
;PE_000002D6: ldc.i4.1
	mov	ax,	1
	push	ax
;PE_000002D7: ldloc.1
	push	word [ss:bp-4]
;PE_000002D8: call 0600000E
	call	Mona_FDC__ReadSectors__u2_u2_u2
;PE_000002DD: ldloc.0
	push	word [ss:bp-2]
;PE_000002DE: call 0600000D
	call	u2__Mona_FDC__GetFAT__u2
;	push	ax	; [optimize] ignore
;PE_000002E3: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000002E4: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000002E5: ldc.i4 00000FFF
;	mov	ax,	4095	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000002EA: bne.un.s 02
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-2],	4095	; [optimize] add
	jne	PE_000002EE
;PE_000002EC: br.s 11
	jmp	PE_000002FF
PE_000002EE: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000002EF: ldc.i4 00000200
;	mov	ax,	512	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000002F4: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000002F6: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	512	; [optimize] add
PE_000002F7: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000002F8: ldc.i4 00001000
;	mov	ax,	4096	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000002FD: blt.s D2
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	4096	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	4096	; [optimize] add
	jc	PE_000002D1
PE_000002FF: ;[native] get register
	push	cs
;PE_00000304: [native] set register
	pop	ds
;PE_00000309: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000030A: ldc.i4 00000200
	mov	ax,	512
;	push	ax	; [optimize] ignore
;PE_0000030F: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-4]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000311: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_00000312: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000313: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
;	mov	word [ss:bp-8],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-8],	0	; [optimize] add
;PE_00000314: br 00000098
	jmp	PE_000003B1
PE_00000319: ;ldstr 7000003F
	mov	ax,	US_0000003F
	push	ax
;PE_0000031E: ldloc.3
	push	word [ss:bp-8]
;PE_0000031F: call 06000006
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_00000324: brfalse.s 22
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_00000348
;PE_00000326: ldloc.3
	push	word [ss:bp-8]
;PE_00000327: ldstr 7000003F
	mov	ax,	US_0000003F
	push	ax
;PE_0000032C: call 06000005
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_00000331: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
	push	ax
;PE_00000333: call 06000007
	call	u2__Mona_Str__ReadNumber__u2
;	push	ax	; [optimize] ignore
;PE_00000338: stloc.s 04
;	pop	word [ss:bp-10]	; [optimize] ignore
	mov	word [ss:bp-10],	ax	; [optimize] add
;PE_0000033A: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_0000033C: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000033D: ble.s 07
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-10]	; [optimize] add
	jnc	PE_00000346
;PE_0000033F: ldloc.s 04
	push	word [ss:bp-10]
;PE_00000341: stsfld 0400000C
	pop	word [cs:Mona_VESA__Resolution]
PE_00000346: ;br.s 2D
	jmp	PE_00000375
PE_00000348: ;ldstr 70000061
	mov	ax,	US_00000061
	push	ax
;PE_0000034D: ldloc.3
	push	word [ss:bp-8]
;PE_0000034E: call 06000006
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_00000353: brfalse.s 20
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_00000375
;PE_00000355: ldloc.3
	push	word [ss:bp-8]
;PE_00000356: ldstr 70000061
	mov	ax,	US_00000061
	push	ax
;PE_0000035B: call 06000005
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_00000360: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
	push	ax
;PE_00000362: call 06000007
	call	u2__Mona_Str__ReadNumber__u2
;	push	ax	; [optimize] ignore
;PE_00000367: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
;PE_00000369: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_0000036B: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000036C: ble.s 07
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-12]	; [optimize] add
	jnc	PE_00000375
;PE_0000036E: ldloc.s 05
	push	word [ss:bp-12]
;PE_00000370: stsfld 0400000D
	pop	word [cs:Mona_VESA__Bpp]
PE_00000375: ;br.s 36
	jmp	PE_000003AD
PE_00000377: ;[native] set register
	mov	di,	[ss:bp-8]
;PE_0000037D: [native] inline
	mov	al,	[es:di]
;PE_00000388: [native] inline
	mov	ah,	0
;PE_00000393: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000398: stloc.s 06
;	pop	word [ss:bp-14]	; [optimize] ignore
	mov	word [ss:bp-14],	ax	; [optimize] add
;PE_0000039A: ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_0000039B: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000039C: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000039E: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
;	mov	word [ss:bp-8],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-8],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-8]	; [Optimize] add
;PE_0000039F: ldloc.s 06
;	push	word [ss:bp-14]	; [optimize] ignore
;PE_000003A1: ldc.i4.s 0D
;	mov	ax,	13	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003A3: beq.s 06
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-14]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-14]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-14],	13	; [optimize] add
	je	PE_000003AB
;PE_000003A5: ldloc.s 06
;	push	word [ss:bp-14]	; [optimize] ignore
;PE_000003A7: ldc.i4.s 0A
;	mov	ax,	10	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003A9: bne.un.s 02
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-14]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-14]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-14],	10	; [optimize] add
	jne	PE_000003AD
PE_000003AB: ;br.s 04
	jmp	PE_000003B1
PE_000003AD: ;ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000003AE: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000003AF: blt.s C6
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-8]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-6]	; [optimize] add
	jc	PE_00000377
PE_000003B1: ;ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000003B2: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000003B3: blt FFFFFF61
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-8]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-6]	; [optimize] add
	jc	PE_00000319
PE_000003B8: ;ret
	mov	sp,	bp
	pop	bp
	ret

; void Mona.SecondBoot::SetVesaMode()
Mona_SecondBoot__SetVesaMode:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_000003C8: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000003C9: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_000003CE: ldsfld 0400000C
	push	word [cs:Mona_VESA__Resolution]
;PE_000003D3: stloc.0
	pop	word [ss:bp-2]
;PE_000003D4: ldc.i4 0000010F
;	mov	ax,	271	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003D9: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-4],	271	; [optimize] add
;PE_000003DA: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000003DB: ldc.i4 00000140
	mov	ax,	320
;	push	ax	; [optimize] ignore
;PE_000003E0: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc	PE_000003E7
;PE_000003E2: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000003E3: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003E4: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003E6: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_000003E7: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000003E8: ldc.i4 00000280
	mov	ax,	640
;	push	ax	; [optimize] ignore
;PE_000003ED: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc	PE_000003F4
;PE_000003EF: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000003F0: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003F1: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003F3: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_000003F4: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000003F5: ldc.i4 00000320
	mov	ax,	800
;	push	ax	; [optimize] ignore
;PE_000003FA: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc	PE_00000401
;PE_000003FC: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000003FD: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000003FE: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000400: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000401: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000402: ldc.i4 00000400
	mov	ax,	1024
;	push	ax	; [optimize] ignore
;PE_00000407: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc	PE_0000040E
;PE_00000409: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000040A: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000040B: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000040D: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_0000040E: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000040F: ldc.i4 00000500
	mov	ax,	1280
;	push	ax	; [optimize] ignore
;PE_00000414: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc	PE_0000041B
;PE_00000416: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000417: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000418: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000041A: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_0000041B: ;ldsfld 0400000D
	push	word [cs:Mona_VESA__Bpp]
;PE_00000420: stloc.2
	pop	word [ss:bp-6]
;PE_00000421: br.s 37
	jmp	PE_0000045A
PE_00000423: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000424: ldc.i4.s 10
	mov	ax,	16
;	push	ax	; [optimize] ignore
;PE_00000426: ble.s 14
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-6]	; [optimize] add
	jnc	PE_0000043C
;PE_00000428: ldloc.1
	push	word [ss:bp-4]
;PE_00000429: ldc.i4 00000800
	mov	ax,	2048
	push	ax
;PE_0000042E: ldc.i4 00000830
	mov	ax,	2096
	push	ax
;PE_00000433: call 06000012
	call	boolean__Mona_VESA__TryMode__u2_u2_u2
;	push	ax	; [optimize] ignore
;PE_00000438: brfalse.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_0000043C
;PE_0000043A: br.s 40
	jmp	PE_0000047C
PE_0000043C: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000043D: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000043E: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	1	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	1	; [optimize] add, [optimize] ignore
;	dec	ax	; [Optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000440: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	dec	word [ss:bp-4]	; [optimize] add
;PE_00000441: ldloc.1
	push	word [ss:bp-4]
;PE_00000442: ldc.i4 00000800
	mov	ax,	2048
	push	ax
;PE_00000447: ldc.i4 00000830
	mov	ax,	2096
	push	ax
;PE_0000044C: call 06000012
	call	boolean__Mona_VESA__TryMode__u2_u2_u2
;	push	ax	; [optimize] ignore
;PE_00000451: brfalse.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_00000455
;PE_00000453: br.s 27
	jmp	PE_0000047C
PE_00000455: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000456: ldc.i4.2
;	mov	ax,	2	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000457: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	2	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	2	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000459: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	sub	word [ss:bp-4],	2	; [optimize] add
PE_0000045A: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000045B: ldc.i4 0000010E
;	mov	ax,	270	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000460: bge.s C1
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	270	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	270	; [optimize] add
	jnc	PE_00000423
;PE_00000462: [native] set register
	mov	di,	2048
;PE_0000046C: [native] inline
	mov	byte [es:di],	'N'
;PE_00000477: call 06000016
	call	Mona_VESA__SetVGA
PE_0000047C: ;ret
	mov	sp,	bp
	pop	bp
	ret

; class Mona.Str

; u2 Mona.Str::GetLength(string)
u2__Mona_Str__GetLength__string:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000004A0: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_000004A6: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+4]	; [optimize] add
;PE_000004AB: [native] inline
	mov	al,	[si]
;PE_000004B6: [native] inline
	mov	ah,	0
;PE_000004C1: [native] get register
;	push	ax	; [optimize] ignore
;PE_000004C6: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000004C7: br.s 00
;	jmp	PE_000004C9	; [optimize] ignore
;PE_000004C9: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000004CA: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; boolean Mona.Str::StartsWith(string, u2)
boolean__Mona_Str__StartsWith__string_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000004D8: ldarg.0
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_000004DE: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+6]	; [optimize] add
;PE_000004E3: [native] inline
	mov	cl,	[si]
;PE_000004EE: [native] inline
	mov	ch,	0
;PE_000004F9: [native] inline
	inc	si
;PE_00000504: [native] set register
	mov	di,	[ss:bp+4]
;PE_0000050A: [native] inline
	rep	cmpsb
;PE_00000515: [native] get flag
	jz	NM_00000000
	xor	ax,	ax
	jmp	NM_00000001
NM_00000000: ;[native] get flag internal
	mov	ax,	1
NM_00000001: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_0000051A: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000051B: br.s 00
;	jmp	PE_0000051D	; [optimize] ignore
;PE_0000051D: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000051E: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	4

; u2 Mona.Str::ReadNumber(u2)
u2__Mona_Str__ReadNumber__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_0000052C: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000052D: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-2],	0	; [optimize] add
;PE_0000052E: [native] set register
	mov	di,	[ss:bp+4]
;PE_00000534: br.s 42
	jmp	PE_00000578
PE_00000536: ;[native] inline
	mov	al,	[es:di]
;PE_00000541: [native] inline
	mov	ah,	0
;PE_0000054C: [native] inline
	inc	di
;PE_00000557: [native] get register
;	push	ax	; [optimize] ignore
;PE_0000055C: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_0000055D: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000055E: ldc.i4.s 30
;	mov	ax,	48	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000560: blt.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	48	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	48	; [optimize] add
	jc	PE_00000567
;PE_00000562: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000563: ldc.i4.s 39
	mov	ax,	57
;	push	ax	; [optimize] ignore
;PE_00000565: ble.s 02
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-4]	; [optimize] add
	jnc	PE_00000569
PE_00000567: ;br.s 11
	jmp	PE_0000057A
PE_00000569: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000056A: ldc.i4.s 0A
	mov	ax,	10
;	push	ax	; [optimize] ignore
;PE_0000056C: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_0000056E: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000056F: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000570: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000571: ldc.i4.s 30
;	mov	ax,	48	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000573: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	48	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-4]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	48	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000575: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000577: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
PE_00000578: ;br.s BC
	jmp	PE_00000536
PE_0000057A: ;ldloc.0
	push	word [ss:bp-2]
;PE_0000057B: stloc.2
	pop	word [ss:bp-6]
;PE_0000057C: br.s 00
;	jmp	PE_0000057E	; [optimize] ignore
;PE_0000057E: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_0000057F: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; class Mona.A20

; void Mona.A20::Enable()
Mona_A20__Enable:
;PE_000005A0: call 0600000A
	call	Mona_A20__Wait
;PE_000005A5: ldc.i4.s 64
;	mov	ax,	100	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	100	; [optimize] add
;PE_000005A7: ldc.i4 000000D1
	mov	ax,	209
;	push	ax	; [optimize] ignore
;PE_000005AC: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_000005B1: call 0600000A
	call	Mona_A20__Wait
;PE_000005B6: ldc.i4.s 60
;	mov	ax,	96	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	96	; [optimize] add
;PE_000005B8: ldc.i4 000000DF
	mov	ax,	223
;	push	ax	; [optimize] ignore
;PE_000005BD: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_000005C2: call 0600000A
	call	Mona_A20__Wait
;PE_000005C7: ldc.i4.s 64
;	mov	ax,	100	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	100	; [optimize] add
;PE_000005C9: ldc.i4 000000FF
	mov	ax,	255
;	push	ax	; [optimize] ignore
;PE_000005CE: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_000005D3: ret
	ret

; void Mona.A20::Wait()
Mona_A20__Wait:
;PE_000005E0: br.s 00
;	jmp	PE_000005E2	; [optimize] ignore
PE_000005E2: ;[native] in
	in	al,	100
	mov	ah,	0
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_000005E9: ldc.i4.2
;	mov	ax,	2	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000005EA: and
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	and	ax,	dx	; [optimize] ignore
;	and	ax,	ax	; [optimize] add, [optimize] ignore
	and	ax,	2	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000005EB: brtrue.s F5
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_000005E2
;PE_000005ED: ret
	ret

; class Mona.FDC

; u2 Mona.FDC::SearchFile(string)
u2__Mona_FDC__SearchFile__string:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_00000610: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000611: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-2],	0	; [optimize] add
;PE_00000612: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000613: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-4],	0	; [optimize] add
;PE_00000614: br.s 31
	jmp	PE_00000647
PE_00000616: ;ldarg.0
	push	word [ss:bp+4]
;PE_00000617: ldloc.0
	push	word [ss:bp-2]
;PE_00000618: call 06000006
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_0000061D: brfalse.s 1D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_0000063C
;PE_0000061F: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000620: ldc.i4.s 1A
	mov	ax,	26
;	push	ax	; [optimize] ignore
;PE_00000622: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000624: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_00000629: [native] inline
	mov	ax,	[es:di]
;PE_00000634: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000639: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_0000063A: br.s 17
	jmp	PE_00000653
PE_0000063C: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000063D: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000063E: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000640: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	1	; [optimize] add
;PE_00000641: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000642: ldc.i4.s 20
;	mov	ax,	32	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000644: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000646: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-2],	32	; [optimize] add
PE_00000647: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000648: ldc.i4 000000E0
;	mov	ax,	224	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000064D: blt.s C7
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	224	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	224	; [optimize] add
	jc	PE_00000616
;PE_0000064F: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000650: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
;	mov	word [ss:bp-6],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-6],	0	; [optimize] add
;PE_00000651: br.s 00
;	jmp	PE_00000653	; [optimize] ignore
PE_00000653: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000654: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; u2 Mona.FDC::GetFAT(u2)
u2__Mona_FDC__GetFAT__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000664: [native] set register
	mov	si,	[ss:bp+4]
;PE_0000066A: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_0000066B: ldc.i4 00006000
	mov	ax,	24576
;	push	ax	; [optimize] ignore
;PE_00000670: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp+4]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000672: [native] set register
;	pop	bx	; [optimize] ignore
	mov	bx,	ax	; [optimize] add
;PE_00000677: [native] inline
	shr	si,	1
;PE_00000682: [native] inline
	mov	cx,	[si+bx]
;PE_0000068D: [native] get flag
	jc	NM_00000002
	xor	ax,	ax
	jmp	NM_00000003
NM_00000002: ;[native] get flag internal
	mov	ax,	1
NM_00000003: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_00000692: brfalse.s 0D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000006A1
;PE_00000694: [native] inline
	shr	cx,	4
;PE_0000069F: br.s 0B
	jmp	PE_000006AC
PE_000006A1: ;[native] inline
	and	ch,	0x0f
PE_000006AC: ;[native] get register
;	push	cx	; [optimize] ignore
;PE_000006B1: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	cx	; [optimize] add
;PE_000006B2: br.s 00
;	jmp	PE_000006B4	; [optimize] ignore
;PE_000006B4: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006B5: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.FDC::ReadSectors(u2, u2, u2)
Mona_FDC__ReadSectors__u2_u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	12
;PE_000006C4: [native] inline
	push	es
;PE_000006CF: br 00000099
	jmp	PE_0000076D
PE_000006D4: ;ldarg.2
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_000006D6: neg
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+4]	; [optimize] add
	neg	ax
;	push	ax	; [optimize] ignore
;PE_000006D8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006D9: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006DA: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006DB: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	1	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	1	; [optimize] add, [optimize] ignore
;	dec	ax	; [Optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006DD: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	dec	word [ss:bp-2]	; [optimize] add
;PE_000006DE: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006DF: ldc.i4.s 09
;	mov	ax,	9	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006E1: shr
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	9	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	shr	ax,	cl
;	push	ax	; [optimize] ignore
;PE_000006E3: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006E4: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006E5: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006E6: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006E8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-2],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-2]	; [Optimize] add
;PE_000006E9: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006EA: ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_000006EB: ble.s 02
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+6]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc	PE_000006EF
;PE_000006ED: ldarg.1
	push	word [ss:bp+6]
;PE_000006EE: stloc.0
	pop	word [ss:bp-2]
PE_000006EF: ;br.s 64
	jmp	PE_00000755
PE_000006F1: ;ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000006F2: ldc.i4.s 24
;	mov	ax,	36	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006F4: div
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	36	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+8]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	ax	; [optimize] ignore
;PE_000006F5: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000006F6: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000006F7: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000006F8: ldc.i4.s 24
;	mov	ax,	36	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006FA: rem
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	36	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+8]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	dx	; [optimize] ignore
;PE_000006FB: conv.u1
;	pop	ax	; [optimize] ignore
;	mov	ax,	dx	; [optimize] add, [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000006FC: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
;	mov	word [ss:bp-6],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-6],	dx	; [optimize] add
;PE_000006FD: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000006FE: ldc.i4.s 12
;	mov	ax,	18	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000700: div
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	18	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	ax	; [optimize] ignore
;PE_00000701: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_00000702: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_00000703: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000704: ldc.i4.s 12
;	mov	ax,	18	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000706: rem
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	18	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	dx	; [optimize] ignore
;PE_00000707: conv.u1
;	pop	ax	; [optimize] ignore
;	mov	ax,	dx	; [optimize] add, [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_00000708: stloc.s 04
;	pop	word [ss:bp-10]	; [optimize] ignore
;	mov	word [ss:bp-10],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-10],	dx	; [optimize] add
;PE_0000070A: ldc.i4.s 12
	mov	ax,	18
;	push	ax	; [optimize] ignore
;PE_0000070C: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_0000070E: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-10]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000070F: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_00000710: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
;PE_00000712: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000714: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000715: ble.s 04
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-12]	; [optimize] add
	jnc	PE_0000071B
;PE_00000717: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000718: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_00000719: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
PE_0000071B: ;ldloc.s 05
	push	word [ss:bp-12]
;PE_0000071D: ldarg.2
	push	word [ss:bp+4]
;PE_0000071E: ldloc.1
	push	word [ss:bp-4]
;PE_0000071F: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000721: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_00000722: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-10]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000723: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
	push	ax
;PE_00000724: ldloc.3
	push	word [ss:bp-8]
;PE_00000725: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000726: call 0600000F
	call	boolean__Mona_FDC__Read__u1_u2_u1_u1_u1_u1
;	push	ax	; [optimize] ignore
;PE_0000072B: brtrue.s 09
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000736
;PE_0000072D: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_0000072E: call 06000010
	call	boolean__Mona_FDC__Reset__u1
;	push	ax	; [optimize] ignore
;PE_00000733: pop
;	pop	ax	; [optimize] ignore
;PE_00000734: br.s 1F
	jmp	PE_00000755
PE_00000736: ;ldarg.2
	push	word [ss:bp+4]
;PE_00000737: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000739: ldc.i4.s 09
;	mov	ax,	9	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000073B: shl
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	9	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-12]	; [optimize] add
	shl	ax,	cl
;	push	ax	; [optimize] ignore
;PE_0000073D: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_0000073F: starg.s 02
;	pop	word [ss:bp+4]	; [optimize] ignore
	mov	word [ss:bp+4],	ax	; [optimize] add
;PE_00000741: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_00000742: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000744: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-12]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+8]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp+8]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000746: starg.s 00
;	pop	word [ss:bp+8]	; [optimize] ignore
	mov	word [ss:bp+8],	ax	; [optimize] add
;PE_00000748: ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_00000749: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_0000074B: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+6]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-12]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000074D: starg.s 01
;	pop	word [ss:bp+6]	; [optimize] ignore
	mov	word [ss:bp+6],	ax	; [optimize] add
;PE_0000074F: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000750: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000752: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-12]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000754: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
PE_00000755: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000756: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000757: bgt.s 98
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jc	PE_000006F1
;PE_00000759: [native] get register
;	push	es	; [optimize] ignore
;PE_0000075E: ldc.i4 00001000
	mov	ax,	4096
;	push	ax	; [optimize] ignore
;PE_00000763: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	es	; [optimize] add
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_00000765: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000076A: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000076B: starg.s 02
;	pop	word [ss:bp+4]	; [optimize] ignore
;	mov	word [ss:bp+4],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp+4],	0	; [optimize] add
PE_0000076D: ;ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_0000076E: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000076F: bgt FFFFFF60
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp+6]	; [optimize] add
	jc	PE_000006D4
;PE_00000774: [native] inline
	pop	es
;PE_0000077F: ret
	mov	sp,	bp
	pop	bp
	ret	6

; boolean Mona.FDC::Read(u1, u2, u1, u1, u1, u1)
boolean__Mona_FDC__Read__u1_u2_u1_u1_u1_u1:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_0000078C: [native] set register
	mov	ah,	2
;PE_00000792: [native] set register
	mov	al,	[ss:bp+14]
;PE_00000798: [native] set register
	mov	bx,	[ss:bp+12]
;PE_0000079E: [native] set register
	mov	ch,	[ss:bp+10]
;PE_000007A4: [native] set register
	mov	cl,	[ss:bp+8]
;PE_000007AA: [native] set register
	mov	dh,	[ss:bp+6]
;PE_000007B1: [native] set register
	mov	dl,	[ss:bp+4]
;PE_000007B8: [native] inline
	int	0x13
;PE_000007C3: [native] get flag
	jnc	NM_00000004
	xor	ax,	ax
	jmp	NM_00000005
NM_00000004: ;[native] get flag internal
	mov	ax,	1
NM_00000005: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_000007C8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000007C9: br.s 00
;	jmp	PE_000007CB	; [optimize] ignore
;PE_000007CB: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000007CC: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	12

; boolean Mona.FDC::Reset(u1)
boolean__Mona_FDC__Reset__u1:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000007DC: [native] set register
	mov	ah,	0
;PE_000007E2: [native] set register
	mov	dl,	[ss:bp+4]
;PE_000007E8: [native] inline
	int	0x13
;PE_000007F3: [native] get flag
	jnc	NM_00000006
	xor	ax,	ax
	jmp	NM_00000007
NM_00000006: ;[native] get flag internal
	mov	ax,	1
NM_00000007: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_000007F8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000007F9: br.s 00
;	jmp	PE_000007FB	; [optimize] ignore
;PE_000007FB: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000007FC: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; class Mona.VESA

Mona_VESA__Resolution dw 0
Mona_VESA__Bpp dw 0

; boolean Mona.VESA::TryMode(u2, u2, u2)
boolean__Mona_VESA__TryMode__u2_u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000820: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_00000821: ldc.i4 00004000
	mov	ax,	16384
;	push	ax	; [optimize] ignore
;PE_00000826: or
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+8]	; [optimize] add, [optimize] ignore
;	or	ax,	dx	; [optimize] ignore
	or	ax,	word [ss:bp+8]	; [optimize] add
	push	ax
;PE_00000828: call 06000013
	call	boolean__Mona_VESA__SetMode__u2
;	push	ax	; [optimize] ignore
;PE_0000082D: brtrue.s 04
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000833
;PE_0000082F: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000830: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-2],	0	; [optimize] add
;PE_00000831: br.s 1D
	jmp	PE_00000850
PE_00000833: ;ldarg.1
	push	word [ss:bp+6]
;PE_00000834: call 06000014
	call	boolean__Mona_VESA__GetInfo__u2
;	push	ax	; [optimize] ignore
;PE_00000839: brtrue.s 04
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_0000083F
;PE_0000083B: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000083C: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-2],	0	; [optimize] add
;PE_0000083D: br.s 11
	jmp	PE_00000850
PE_0000083F: ;ldarg.0
	push	word [ss:bp+8]
;PE_00000840: ldarg.2
	push	word [ss:bp+4]
;PE_00000841: call 06000015
	call	boolean__Mona_VESA__GetInfoDetails__u2_u2
;	push	ax	; [optimize] ignore
;PE_00000846: brtrue.s 04
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_0000084C
;PE_00000848: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000849: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-2],	0	; [optimize] add
;PE_0000084A: br.s 04
	jmp	PE_00000850
PE_0000084C: ;ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000084D: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-2],	1	; [optimize] add
;PE_0000084E: br.s 00
;	jmp	PE_00000850	; [optimize] ignore
PE_00000850: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000851: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	6

; boolean Mona.VESA::SetMode(u2)
boolean__Mona_VESA__SetMode__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000860: [native] set register
	mov	ax,	20226
;PE_0000086A: [native] set register
	mov	bx,	[ss:bp+4]
;PE_00000870: [native] inline
	int	0x10
;PE_0000087B: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000880: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000882: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	ax	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_00000008
	xor	ax,	ax
	jmp	NM_00000009
NM_00000008: ;ceq internal
	mov	ax,	1
NM_00000009: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000884: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000885: br.s 00
;	jmp	PE_00000887	; [optimize] ignore
;PE_00000887: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000888: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; boolean Mona.VESA::GetInfo(u2)
boolean__Mona_VESA__GetInfo__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000898: [native] set register
	mov	ax,	20224
;PE_000008A2: [native] set register
	mov	di,	[ss:bp+4]
;PE_000008A8: [native] inline
	int	0x10
;PE_000008B3: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_000008B8: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008BA: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	ax	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_0000000A
	xor	ax,	ax
	jmp	NM_0000000B
NM_0000000A: ;ceq internal
	mov	ax,	1
NM_0000000B: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_000008BC: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000008BD: br.s 00
;	jmp	PE_000008BF	; [optimize] ignore
;PE_000008BF: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008C0: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; boolean Mona.VESA::GetInfoDetails(u2, u2)
boolean__Mona_VESA__GetInfoDetails__u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000008D0: [native] set register
	mov	ax,	20225
;PE_000008DA: [native] set register
	mov	cx,	[ss:bp+6]
;PE_000008E0: [native] set register
	mov	di,	[ss:bp+4]
;PE_000008E6: [native] inline
	int	0x10
;PE_000008F1: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_000008F6: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008F8: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	ax	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_0000000C
	xor	ax,	ax
	jmp	NM_0000000D
NM_0000000C: ;ceq internal
	mov	ax,	1
NM_0000000D: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_000008FA: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000008FB: br.s 00
;	jmp	PE_000008FD	; [optimize] ignore
;PE_000008FD: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008FE: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	4

; void Mona.VESA::SetVGA()
Mona_VESA__SetVGA:
;PE_0000090C: [native] set register
	mov	ax,	18
;PE_00000913: [native] inline
	int	0x10
;PE_0000091E: ret
	ret

; void Mona.VESA::.cctor()
Mona_VESA___cctor:
;PE_0000092C: ldc.i4 00000320
;	mov	ax,	800	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000931: stsfld 0400000C
;	pop	word [cs:Mona_VESA__Resolution]	; [optimize] ignore
;	mov	word [cs:Mona_VESA__Resolution],	ax	; [optimize] add, [optimize] ignore
	mov	word [cs:Mona_VESA__Resolution],	800	; [optimize] add
;PE_00000936: ldc.i4.s 20
;	mov	ax,	32	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000938: stsfld 0400000D
;	pop	word [cs:Mona_VESA__Bpp]	; [optimize] ignore
;	mov	word [cs:Mona_VESA__Bpp],	ax	; [optimize] add, [optimize] ignore
	mov	word [cs:Mona_VESA__Bpp],	32	; [optimize] add
;PE_0000093D: ret
	ret

US_00000027 db 11, "MONA    CFG"
US_0000003F db 16, "VESA_RESOLUTION="
US_00000061 db 9, "VESA_BPP="

;-------------------------------------------------------------------------------
; entry point
;-------------------------------------------------------------------------------

SecondBootMain:
        call    ILMain

;-------------------------------------------------------------------------------
; To Protect mode
;-------------------------------------------------------------------------------
RealToProtect:
;;; Real to Protect
        mov     ax, cs          ; we jump from firstboot
        mov     ds, ax          ; so ds is changed
        lgdt    [gdtr]          ; load gdtr
        cli                     ; disable interrupt
        mov     eax, cr0        ; real
        or      eax, 1          ; to
        mov     cr0, eax        ; protect
        jmp     flush_q1

;-------------------------------------------------------------------------------
; GDT definition: It is temporary.
;-------------------------------------------------------------------------------
gdtr:
        dw gdt_end - gdt0 - 1   ; gdt limit
        dd gdt0 + 0x100 * 16    ; start adderess

gdt0:                           ; segment 00
        dw 0                    ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0                    ; segment type
        db 0                    ; segment limitH
        db 0                    ; segment baseH

gdt08:                          ; segment 08(code segment)
        dw 0xffff               ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x9a                 ; Type Code
        db 0xff                 ; segment limitH
        db 0                    ; segment baseH

gdt10:                          ; segment 10(data segment)
        dw 0xffff               ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x92                 ; Type Data
        db 0xff                 ; segment limitH
        db 0                    ; segment baseH

gdt18:                          ; segment 18(stack segment)
        dw 0                    ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x96                 ; Type Stack
        db 0xC0                 ; segment limitH
        db 0                    ; segment baseH

gdt_end:                        ; end of gdt

[bits 32]
flush_q1:
        db 0eah
        dw set_cs_desc1 + 0x100 * 16
        dw 08h

set_cs_desc1:
        mov     ax, 0x10        ; ds & es
        mov     ds, ax          ; selector is
        mov     es, ax          ; 0x10
        mov     ax, 0x18        ; ss selector
        mov     ss, ax          ; is 0x18
        mov     esp, 0x80000    ; sp is 3MB
        push    eax
        jmp     REL_KERNEL_ADDR + MONA_HEADER_SIZE
;  hang:
;          jmp hang

        times (REL_KERNEL_ADDR)-($-$$) db 0
