     1                                  ;-------------------------------------------------------------------------------
     2                                  ; Name        : secondboot.asm
     3                                  ; Description : firstboot read this from disk and execute.
     4                                  ; Revision    : $Revision$ $Date$
     5                                  ; Copyright (c) 2002 HigePon
     6                                  ; WITHOUT ANY WARRANTY
     7                                  ;-------------------------------------------------------------------------------
     8                                  [bits 16]
     9                                  
    10                                  RealToProtect:
    11 00000000 8CC8                            mov  ax, cs             ; we jump from firstboot
    12 00000002 8ED8                            mov  ds, ax             ; so ds is changed
    13 00000004 0F0116[1900]                    lgdt [gdtr]             ; load gdtr
    14 00000009 FA                              cli                     ; disable interrupt
    15 0000000A 0F20C0                          mov  eax, cr0           ; real
    16 0000000D 660D01000000                    or   eax, 1             ; to
    17 00000013 0F22C0                          mov  cr0, eax           ; protect
    18 00000016 E92600                          jmp  flush_q1
    19                                  
    20                                  ;-------------------------------------------------------------------------------
    21                                  ; GDT definition
    22                                  ;-------------------------------------------------------------------------------
    23                                  gdtr:
    24 00000019 1F00                            dw gdt_end - gdt0 - 1   ; gdt limit
    25 0000001B [1F100000]                      dd gdt0 + 0x100 * 16    ; start adderess
    26                                  
    27                                  gdt0:                           ; segment 00
    28 0000001F 0000                            dw 0                    ; segment limitL
    29 00000021 0000                            dw 0                    ; segment baseL
    30 00000023 00                              db 0                    ; segment baseM
    31 00000024 00                              db 0                    ; segment type
    32 00000025 00                              db 0                    ; segment limitH
    33 00000026 00                              db 0                    ; segment baseH
    34                                  
    35                                  gdt08:                          ; segment 08(code segment)
    36 00000027 FFFF                            dw 0xffff               ; segment limitL
    37 00000029 0000                            dw 0                    ; segment baseL
    38 0000002B 00                              db 0                    ; segment baseM
    39 0000002C 9A                              db 0x9a                 ; Type Code
    40 0000002D CF                              db 0xcf                 ; segment limitH
    41 0000002E 00                              db 0                    ; segment baseH
    42                                  
    43                                  gdt10:                          ; segment 10(data segment)
    44 0000002F FFFF                            dw 0xffff               ; segment limitL
    45 00000031 0000                            dw 0                    ; segment baseL
    46 00000033 00                              db 0                    ; segment baseM
    47 00000034 92                              db 0x92                 ; Type Data
    48 00000035 CF                              db 0xcf                 ; segment limitH
    49 00000036 00                              db 0                    ; segment baseH
    50                                  
    51                                  gdt18:                          ; segment 18(stack segment)
    52 00000037 0000                            dw 0                    ; segment limitL
    53 00000039 0000                            dw 0                    ; segment baseL
    54 0000003B 00                              db 0                    ; segment baseM
    55 0000003C 96                              db 0x96                 ; Type Stack
    56 0000003D C0                              db 0xc0                 ; segment limitH
    57 0000003E 00                              db 0                    ; segment baseH
    58                                  
    59                                  gdt_end:                        ; end of gdt
    60                                  
    61                                  [bits 32]
    62                                  flush_q1:
    63 0000003F EA                              db 0eah
    64 00000040 [4410]                          dw set_cs_desc1 + 0x100 * 16
    65 00000042 0800                            dw 08h
    66                                  
    67                                  set_cs_desc1:
    68 00000044 66B81000                        mov  ax, 0x10           ; ds & es
    69 00000048 668ED8                          mov  ds, ax             ; selector is
    70 0000004B 668EC0                          mov  es, ax             ; 0x10
    71 0000004E 66B81800                        mov  ax, 0x18           ; ss selector
    72 00000052 668ED0                          mov  ss, ax             ; is 0x18
    73 00000055 BC00008000                      mov  esp, 1024*1024*8   ; sp is 8MB
    74 0000005A E9(00020000)                    jmp  0x200
    75                                  ;  hang:
    76                                  ;          jmp hang
    77                                  
    78                                  
    79 0000005F 00<rept>                        times 512-($-$$) db 0
