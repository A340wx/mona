     1                                  ;-------------------------------------------------------------------------------
     2                                  ; Name        : firstboot.asm
     3                                  ; Description : boot from floppy disk, echo String and read secondboot
     4                                  ; Revision    : $Revision$ $Date$
     5                                  ; Copyright (c) 2002 HigePon
     6                                  ; WITHOUT ANY WARRANTY
     7                                  ;-------------------------------------------------------------------------------
     8                                  %ifndef BOOT_MACRO
     9                                  %define BOOT_MACRO
    10                                      %include 'boot.mac'
    11                              <1> ;-------------------------------------------------------------------------------
    12                              <1> ; Name        : PRINTSTR
    13                              <1> ; Description : print string
    14                              <1> ; Author      : higepon(2002)
    15                              <1> ; Update      : $Date$
    16                              <1> ; version     : $Revision$
    17                              <1> ; Param1      : string(db)
    18                              <1> ;-------------------------------------------------------------------------------
    19                              <1> %macro PRINTSTR16 1
    20                              <1> [BITS 16]
    21                              <1>         push ax
    22                              <1>         mov  si, %1
    23                              <1> %%hige:
    24                              <1>         lodsb                   ; set al=current character at si
    25                              <1>         cmp al, 0               ; if al == 0 then
    26                              <1>         je  %%end               ; end this macro
    27                              <1>         mov ah, 0Eh             ; print
    28                              <1>         mov bh, 0               ; the charcter which is
    29                              <1>         int 10h                 ; at al
    30                              <1>         jmp %%hige              ; next character
    31                              <1> %%end:
    32                              <1>         pop ax
    33                              <1> %endmacro
    34                                  %endif
    35                                  
    36                                  [ORG 0x7C00]
    37                                  
    38 00000000 EB3C                            jmp short start
    39 00000002 90                              nop
    40                                  
    41                                  ; fake boot parameter block (bpb) for RAWRITE added by Guripon
    42                                  ; # Actually, fats and root dir entries are broken for trailing kernel
    43 00000003 48696765706F7320                db      "Higepos "      ; OEM label (maker name and version number)
    44 0000000B 0002                            dw      512             ; bytes/sector
    45 0000000D 01                              db      1               ; sectors/allocation unit
    46 0000000E 0100                            dw      1               ; # of reserved sectors
    47 00000010 02                              db      2               ; # of fats
    48 00000011 E000                            dw      0x00E0          ; # of root dir entries
    49 00000013 400B                            dw      2880            ; # of sectors total in image
    50 00000015 F0                              db      0xF0            ; media descripter: 0xf0 = 2sides18sectors
    51 00000016 0900                            dw      9               ; # of sectors in a fat
    52 00000018 1200                            dw      18              ; # of sectors/track
    53 0000001A 0200                            dw      2               ; # of heads
    54 0000001C 00000000                        dd      0               ; # of hidden sectors
    55 00000020 00000000                        dd      0               ; # of sectors if > 65536
    56 00000024 0000                            dw      0               ; drive number
    57 00000026 29                              db      0x29            ; extended boot signature
    58 00000027 00000000                        dd      0x00000000      ; volume id
    59 0000002B 4E4F204E414D452020-             db      "NO NAME    "   ; volume label
    60 00000034 2020               
    61 00000036 4641543132202020                db      "FAT12   "      ; file system
    62                                  
    63                                  ;
    64                                  start:
    65 0000003E FA                              cli                     ; disable interrupt
    66 0000003F 8CC8                            mov ax, cs              ; code segment address is 0x07C0
    67 00000041 8ED8                            mov ds, ax              ; when data access, use 0x07C0 segment
    68 00000043 8ED0                            mov ss, ax              ; when use stack, user 0x07C0 segment
    69 00000045 FB                              sti                     ; enable interrupt
    70 00000046 B003                            mov al, 3               ; Clear display
    71 00000048 B400                            mov ah, 0               ;
    72 0000004A CD10                            int 0x10                ;
    73                                          PRINTSTR16 MsgNextLine
    74                              <1> [BITS 16]
    75 0000004C 50                  <1>         push ax
    76 0000004D BE[E400]            <1>         mov  si, %1
    77                              <1> %%hige:
    78 00000050 AC                  <1>         lodsb
    79 00000051 3C00                <1>         cmp al, 0
    80 00000053 7409                <1>         je  %%end
    81 00000055 B40E                <1>         mov ah, 0Eh
    82 00000057 B700                <1>         mov bh, 0
    83 00000059 CD10                <1>         int 10h
    84 0000005B E9F2FF              <1>         jmp %%hige
    85                              <1> %%end:
    86 0000005E 58                  <1>         pop ax
    87                                          PRINTSTR16 MsgOsStart
    88                              <1> [BITS 16]
    89 0000005F 50                  <1>         push ax
    90 00000060 BE[E700]            <1>         mov  si, %1
    91                              <1> %%hige:
    92 00000063 AC                  <1>         lodsb
    93 00000064 3C00                <1>         cmp al, 0
    94 00000066 7409                <1>         je  %%end
    95 00000068 B40E                <1>         mov ah, 0Eh
    96 0000006A B700                <1>         mov bh, 0
    97 0000006C CD10                <1>         int 10h
    98 0000006E E9F2FF              <1>         jmp %%hige
    99                              <1> %%end:
   100 00000071 58                  <1>         pop ax
   101                                  
   102                                  reset:
   103                                          PRINTSTR16 MsgResetStart
   104                              <1> [BITS 16]
   105 00000072 50                  <1>         push ax
   106 00000073 BE[FA00]            <1>         mov  si, %1
   107                              <1> %%hige:
   108 00000076 AC                  <1>         lodsb
   109 00000077 3C00                <1>         cmp al, 0
   110 00000079 7409                <1>         je  %%end
   111 0000007B B40E                <1>         mov ah, 0Eh
   112 0000007D B700                <1>         mov bh, 0
   113 0000007F CD10                <1>         int 10h
   114 00000081 E9F2FF              <1>         jmp %%hige
   115                              <1> %%end:
   116 00000084 58                  <1>         pop ax
   117 00000085 B80000                          mov ax, 0               ; reset
   118 00000088 B200                            mov dl, 0               ; drive 0
   119 0000008A CD13                            int 0x13                ;
   120 0000008C 72E4                            jc  reset               ; if failed try again
   121                                          PRINTSTR16 MsgDone
   122                              <1> [BITS 16]
   123 0000008E 50                  <1>         push ax
   124 0000008F BE[2001]            <1>         mov  si, %1
   125                              <1> %%hige:
   126 00000092 AC                  <1>         lodsb
   127 00000093 3C00                <1>         cmp al, 0
   128 00000095 7409                <1>         je  %%end
   129 00000097 B40E                <1>         mov ah, 0Eh
   130 00000099 B700                <1>         mov bh, 0
   131 0000009B CD10                <1>         int 10h
   132 0000009D E9F2FF              <1>         jmp %%hige
   133                              <1> %%end:
   134 000000A0 58                  <1>         pop ax
   135                                  
   136                                  read:
   137                                          PRINTSTR16 MsgReadStart
   138                              <1> [BITS 16]
   139 000000A1 50                  <1>         push ax
   140 000000A2 BE[0D01]            <1>         mov  si, %1
   141                              <1> %%hige:
   142 000000A5 AC                  <1>         lodsb
   143 000000A6 3C00                <1>         cmp al, 0
   144 000000A8 7409                <1>         je  %%end
   145 000000AA B40E                <1>         mov ah, 0Eh
   146 000000AC B700                <1>         mov bh, 0
   147 000000AE CD10                <1>         int 10h
   148 000000B0 E9F2FF              <1>         jmp %%hige
   149                              <1> %%end:
   150 000000B3 58                  <1>         pop ax
   151 000000B4 B80001                          mov ax, 0x100
   152 000000B7 8EC0                            mov es, ax              ; es:bx is
   153 000000B9 BB0000                          mov bx, 0               ; data buffer
   154                                  
   155 000000BC B402                            mov ah, 0x02            ; read sectors into memory
   156 000000BE B012                            mov al, 18              ; number of sectors to read
   157 000000C0 B500                            mov ch, 0               ; low eight bits of cylinder number
   158 000000C2 B102                            mov cl, 2               ; sector number
   159 000000C4 B600                            mov dh, 0               ; head number
   160 000000C6 B200                            mov dl, 0               ; drive number
   161 000000C8 CD13                            int 13h                 ; read!
   162 000000CA 72D5                            jc  read
   163                                          PRINTSTR16 MsgDone
   164                              <1> [BITS 16]
   165 000000CC 50                  <1>         push ax
   166 000000CD BE[2001]            <1>         mov  si, %1
   167                              <1> %%hige:
   168 000000D0 AC                  <1>         lodsb
   169 000000D1 3C00                <1>         cmp al, 0
   170 000000D3 7409                <1>         je  %%end
   171 000000D5 B40E                <1>         mov ah, 0Eh
   172 000000D7 B700                <1>         mov bh, 0
   173 000000D9 CD10                <1>         int 10h
   174 000000DB E9F2FF              <1>         jmp %%hige
   175                              <1> %%end:
   176 000000DE 58                  <1>         pop ax
   177                                  
   178 000000DF EA00000001                      jmp 0x100:0000          ; jump to the secondboot
   179                                  
   180                                  higeposmsg:
   181 000000E4 0D0A00                          MsgNextLine   db  ''                  , 0x0d, 0x0a, 0x00
   182 000000E7 48696765706F732073-             MsgOsStart    db  'Higepos start...'  , 0x0d, 0x0a, 0x00
   183 000000F0 746172742E2E2E0D0A-
   184 000000F9 00                 
   185 000000FA 20206469736B207265-             MsgResetStart db  '  disk reset   ...', 0x00
   186 00000103 7365742020202E2E2E-
   187 0000010C 00                 
   188 0000010D 20206469736B207265-             MsgReadStart  db  '  disk reading ...', 0x00
   189 00000116 6164696E67202E2E2E-
   190 0000011F 00                 
   191 00000120 646F6E650D0A00                  MsgDone       db  'done'              , 0x0d, 0x0a, 0x00
   192                                  ;
   193                                  ;forever:
   194                                  ;        jmp forever
   195                                  ;
   196 00000127 00<rept>                        times 510-($-$$) db 0
   197 000001FE 55AA                            dw 0x0AA55
