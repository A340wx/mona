; This file was automatically generated by IL2Asm16.

[bits 16]
jmp SecondBootMain

ILMain:
	call	Mona_SecondBoot___cctor
	call	Mona_FDC___cctor
	call	Mona_VESA___cctor
	call	Mona_SecondBoot__Main
	ret

; class <Module>

; class Mona.SecondBoot

Mona_SecondBoot__fileseg dw 0
Mona_SecondBoot__sizeptr dw 0

; void Mona.SecondBoot::Main()
Mona_SecondBoot__Main:
;PE_0000025C: call 06000021
	call	Mona_Console__WriteLine
;PE_00000261: ldstr 70000001
	mov	ax,	US_00000001
	push	ax
;PE_00000266: call 06000022
	call	Mona_Console__WriteLine__string
;PE_0000026B: ldstr 7000000D
	mov	ax,	US_0000000D
	push	ax
;PE_00000270: call 06000022
	call	Mona_Console__WriteLine__string
;PE_00000275: call 06000021
	call	Mona_Console__WriteLine
;PE_0000027A: [native] get register
	push	cs
;PE_0000027F: [native] set register
	pop	ds
;PE_00000284: [native] inline
	cli
;PE_0000028F: call 0600000D
	call	Mona_A20__Enable
;PE_00000294: ldstr 70000045
	mov	ax,	US_00000045
	push	ax
;PE_00000299: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_0000029E: ldstr 7000005B
	mov	ax,	US_0000005B
	push	ax
;PE_000002A3: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_000002A8: ldstr 7000006D
	mov	ax,	US_0000006D
	push	ax
;PE_000002AD: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_000002B2: ldstr 70000085
	mov	ax,	US_00000085
	push	ax
;PE_000002B7: call 06000002
	call	Mona_SecondBoot__ReadServer__string
;PE_000002BC: ldstr 7000009D
	mov	ax,	US_0000009D
	push	ax
;PE_000002C1: call 06000003
	call	Mona_SecondBoot__ReadConfig__string
;PE_000002C6: call 06000004
	call	Mona_SecondBoot__SetVesaMode
;PE_000002CB: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_000002CC: call 06000006
	call	Mona_SecondBoot__WriteSize__u2
;PE_000002D1: ret
	ret

; void Mona.SecondBoot::ReadServer(string)
Mona_SecondBoot__ReadServer__string:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000002E0: ldsfld 04000006
	push	word [cs:Mona_SecondBoot__fileseg]
;PE_000002E5: ldarg.0
	push	word [ss:bp+4]
;PE_000002E6: call 06000005
	call	u2__Mona_SecondBoot__ReadFile__u2_string
;	push	ax	; [optimize] ignore
;PE_000002EB: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000002EC: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000002ED: brtrue.s 23
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	or	ax,	ax
	jnz	PE_00000312
;PE_000002EF: ldstr 700000AF
	mov	ax,	US_000000AF
	push	ax
;PE_000002F4: call 06000022
	call	Mona_Console__WriteLine__string
;PE_000002F9: ldstr 700000CD
	mov	ax,	US_000000CD
	push	ax
;PE_000002FE: call 06000022
	call	Mona_Console__WriteLine__string
;PE_00000303: br.s 0B
	jmp	PE_00000310
PE_00000305: ;[native] inline
	hlt
PE_00000310: ;br.s F3
	jmp	PE_00000305
PE_00000312: ;ldloc.0
	push	word [ss:bp-2]
;PE_00000313: call 06000006
	call	Mona_SecondBoot__WriteSize__u2
;PE_00000318: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000319: ldc.i4.s 20
	mov	ax,	32
;	push	ax	; [optimize] ignore
;PE_0000031B: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_0000031D: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000031E: ldsfld 04000006
;	push	word [cs:Mona_SecondBoot__fileseg]	; [optimize] ignore
;PE_00000323: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000324: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_SecondBoot__fileseg]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_SecondBoot__fileseg]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000326: stsfld 04000006
;	pop	word [cs:Mona_SecondBoot__fileseg]	; [optimize] ignore
	mov	word [cs:Mona_SecondBoot__fileseg],	ax	; [optimize] add
;PE_0000032B: ret
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.SecondBoot::ReadConfig(string)
Mona_SecondBoot__ReadConfig__string:
	push	bp
	mov	bp,	sp
	sub	sp,	10
;PE_00000338: ldc.i4 00009000
	mov	ax,	36864
	push	ax
;PE_0000033D: ldarg.0
	push	word [ss:bp+4]
;PE_0000033E: call 06000005
	call	u2__Mona_SecondBoot__ReadFile__u2_string
;	push	ax	; [optimize] ignore
;PE_00000343: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000344: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000345: brtrue.s 0F
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	or	ax,	ax
	jnz	PE_00000356
;PE_00000347: ldstr 700000FB
	mov	ax,	US_000000FB
	push	ax
;PE_0000034C: call 06000022
	call	Mona_Console__WriteLine__string
;PE_00000351: br 000000E5
	jmp	PE_0000043B
PE_00000356: ;ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000357: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000035C: [native] set register
	mov	di,	4352
;PE_00000366: [native] set register
	mov	ax,	[ss:bp-2]
;PE_0000036C: [native] inline
	mov	[es:di],	ax
;PE_00000377: [native] set register
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;PE_0000037D: [native] inline
	mov	[es:di+2],	ax
;PE_00000388: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000389: ldc.i4 00000200
	mov	ax,	512
;	push	ax	; [optimize] ignore
;PE_0000038E: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_00000390: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000391: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_00000396: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000039B: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000039C: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_0000039D: br 00000092
	jmp	PE_00000434
PE_000003A2: ;ldstr 70000183
	mov	ax,	US_00000183
	push	ax
;PE_000003A7: ldloc.1
	push	word [ss:bp-4]
;PE_000003A8: call 0600000A
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_000003AD: brfalse.s 1F
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000003CE
;PE_000003AF: ldloc.1
	push	word [ss:bp-4]
;PE_000003B0: ldstr 70000183
	mov	ax,	US_00000183
	push	ax
;PE_000003B5: call 06000009
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_000003BA: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
	push	ax
;PE_000003BC: call 0600000B
	call	u2__Mona_Str__ReadNumber__u2
;	push	ax	; [optimize] ignore
;PE_000003C1: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_000003C2: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000003C3: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000003C4: ble.s 06
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-6]	; [optimize] add
	jnc near	PE_000003CC
;PE_000003C6: ldloc.2
	push	word [ss:bp-6]
;PE_000003C7: stsfld 04000010
	pop	word [cs:Mona_VESA__Resolution]
PE_000003CC: ;br.s 2A
	jmp	PE_000003F8
PE_000003CE: ;ldstr 700001A5
	mov	ax,	US_000001A5
	push	ax
;PE_000003D3: ldloc.1
	push	word [ss:bp-4]
;PE_000003D4: call 0600000A
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_000003D9: brfalse.s 1D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000003F8
;PE_000003DB: ldloc.1
	push	word [ss:bp-4]
;PE_000003DC: ldstr 700001A5
	mov	ax,	US_000001A5
	push	ax
;PE_000003E1: call 06000009
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_000003E6: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
	push	ax
;PE_000003E8: call 0600000B
	call	u2__Mona_Str__ReadNumber__u2
;	push	ax	; [optimize] ignore
;PE_000003ED: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_000003EE: ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000003EF: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000003F0: ble.s 06
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-8]	; [optimize] add
	jnc near	PE_000003F8
;PE_000003F2: ldloc.3
	push	word [ss:bp-8]
;PE_000003F3: stsfld 04000011
	pop	word [cs:Mona_VESA__Bpp]
PE_000003F8: ;br.s 36
	jmp	PE_00000430
PE_000003FA: ;[native] set register
	mov	di,	[ss:bp-4]
;PE_00000400: [native] inline
	mov	al,	[es:di]
;PE_0000040B: [native] inline
	mov	ah,	0
;PE_00000416: [native] get register
;	push	ax	; [optimize] ignore
;PE_0000041B: stloc.s 04
;	pop	word [ss:bp-10]	; [optimize] ignore
	mov	word [ss:bp-10],	ax	; [optimize] add
;PE_0000041D: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000041E: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000041F: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000421: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
;PE_00000422: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000424: ldc.i4.s 0D
;	mov	ax,	13	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000426: beq.s 06
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-10],	13	; [optimize] add
	je	PE_0000042E
;PE_00000428: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_0000042A: ldc.i4.s 0A
;	mov	ax,	10	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000042C: bne.un.s 02
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-10],	10	; [optimize] add
	jne	PE_00000430
PE_0000042E: ;br.s 04
	jmp	PE_00000434
PE_00000430: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000431: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000432: blt.s C6
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-4]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_000003FA
PE_00000434: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000435: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000436: blt FFFFFF67
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-4]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_000003A2
PE_0000043B: ;ret
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.SecondBoot::SetVesaMode()
Mona_SecondBoot__SetVesaMode:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_00000448: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000449: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000044E: ldsfld 04000010
	push	word [cs:Mona_VESA__Resolution]
;PE_00000453: stloc.0
	pop	word [ss:bp-2]
;PE_00000454: ldc.i4 0000010F
	mov	ax,	271
;	push	ax	; [optimize] ignore
;PE_00000459: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_0000045A: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000045B: ldc.i4 00000140
	mov	ax,	320
;	push	ax	; [optimize] ignore
;PE_00000460: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000467
;PE_00000462: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000463: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000464: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000466: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000467: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000468: ldc.i4 00000280
	mov	ax,	640
;	push	ax	; [optimize] ignore
;PE_0000046D: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000474
;PE_0000046F: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000470: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000471: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000473: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000474: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000475: ldc.i4 00000320
	mov	ax,	800
;	push	ax	; [optimize] ignore
;PE_0000047A: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_00000481
;PE_0000047C: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000047D: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000047E: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000480: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_00000481: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000482: ldc.i4 00000400
	mov	ax,	1024
;	push	ax	; [optimize] ignore
;PE_00000487: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_0000048E
;PE_00000489: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_0000048A: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000048B: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000048D: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_0000048E: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000048F: ldc.i4 00000500
	mov	ax,	1280
;	push	ax	; [optimize] ignore
;PE_00000494: ble.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_0000049B
;PE_00000496: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000497: ldc.i4.3
;	mov	ax,	3	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000498: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000049A: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-4],	3	; [optimize] add
PE_0000049B: ;ldsfld 04000011
	push	word [cs:Mona_VESA__Bpp]
;PE_000004A0: stloc.2
	pop	word [ss:bp-6]
;PE_000004A1: br.s 37
	jmp	PE_000004DA
PE_000004A3: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000004A4: ldc.i4.s 10
	mov	ax,	16
;	push	ax	; [optimize] ignore
;PE_000004A6: ble.s 14
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-6]	; [optimize] add
	jnc near	PE_000004BC
;PE_000004A8: ldloc.1
	push	word [ss:bp-4]
;PE_000004A9: ldc.i4 00000800
	mov	ax,	2048
	push	ax
;PE_000004AE: ldc.i4 00000830
	mov	ax,	2096
	push	ax
;PE_000004B3: call 06000018
	call	boolean__Mona_VESA__TryMode__u2_u2_u2
;	push	ax	; [optimize] ignore
;PE_000004B8: brfalse.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000004BC
;PE_000004BA: br.s 40
	jmp	PE_000004FC
PE_000004BC: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000004BD: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004BE: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	1	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	1	; [optimize] add, [optimize] ignore
;	dec	ax	; [Optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004C0: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	dec	word [ss:bp-4]	; [optimize] add
;PE_000004C1: ldloc.1
	push	word [ss:bp-4]
;PE_000004C2: ldc.i4 00000800
	mov	ax,	2048
	push	ax
;PE_000004C7: ldc.i4 00000830
	mov	ax,	2096
	push	ax
;PE_000004CC: call 06000018
	call	boolean__Mona_VESA__TryMode__u2_u2_u2
;	push	ax	; [optimize] ignore
;PE_000004D1: brfalse.s 02
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000004D5
;PE_000004D3: br.s 27
	jmp	PE_000004FC
PE_000004D5: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000004D6: ldc.i4.2
;	mov	ax,	2	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004D7: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	2	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	2	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004D9: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
	sub	word [ss:bp-4],	2	; [optimize] add
PE_000004DA: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000004DB: ldc.i4 0000010E
;	mov	ax,	270	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000004E0: bge.s C1
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	270	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	270	; [optimize] add
	jnc	PE_000004A3
;PE_000004E2: [native] set register
	mov	di,	2048
;PE_000004EC: [native] inline
	mov	byte [es:di],	'N'
;PE_000004F7: call 0600001C
	call	Mona_VESA__SetVGA
PE_000004FC: ;ret
	mov	sp,	bp
	pop	bp
	ret

; u2 Mona.SecondBoot::ReadFile(u2, string)
u2__Mona_SecondBoot__ReadFile__u2_string:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_0000050C: ldstr 70000219
	mov	ax,	US_00000219
	push	ax
;PE_00000511: call 06000020
	call	Mona_Console__Write__string
;PE_00000516: ldarg.1
	push	word [ss:bp+4]
;PE_00000517: call 06000020
	call	Mona_Console__Write__string
;PE_0000051C: ldc.i4.s 20
	mov	ax,	32
	push	ax
;PE_0000051E: call 0600001F
	call	Mona_Console__Write__char
;PE_00000523: ldarg.1
	push	word [ss:bp+4]
;PE_00000524: call 06000010
	call	u2__Mona_FDC__SearchFile__string
;	push	ax	; [optimize] ignore
;PE_00000529: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000052A: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_0000052B: brtrue.s 13
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	or	ax,	ax
	jnz	PE_00000540
;PE_0000052D: call 06000021
	call	Mona_Console__WriteLine
;PE_00000532: ldstr 7000022B
	mov	ax,	US_0000022B
	push	ax
;PE_00000537: call 06000022
	call	Mona_Console__WriteLine__string
;PE_0000053C: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000053D: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_0000053E: br.s 65
	jmp	PE_000005A5
PE_00000540: ;[native] inline
	push	es
;PE_0000054B: ldarg.0
	push	word [ss:bp+6]
;PE_0000054C: [native] set register
	pop	es
;PE_00000551: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000552: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000553: br.s 3A
	jmp	PE_0000058F
PE_00000555: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000556: ldc.i4.s 1F
	mov	ax,	31
;	push	ax	; [optimize] ignore
;PE_00000558: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
	push	ax
;PE_0000055A: ldc.i4.1
	mov	ax,	1
	push	ax
;PE_0000055B: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_0000055C: call 06000012
	call	Mona_FDC__ReadSectors__u2_u2_u2
;PE_00000561: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000562: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000563: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000565: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
;PE_00000566: [native] get register
;	push	es	; [optimize] ignore
;PE_0000056B: ldc.i4.s 20
	mov	ax,	32
;	push	ax	; [optimize] ignore
;PE_0000056D: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	es	; [optimize] add
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_0000056F: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_00000574: ldstr 70000265
	mov	ax,	US_00000265
	push	ax
;PE_00000579: call 06000020
	call	Mona_Console__Write__string
;PE_0000057E: ldloc.0
	push	word [ss:bp-2]
;PE_0000057F: call 06000011
	call	u2__Mona_FDC__GetFAT__u2
;	push	ax	; [optimize] ignore
;PE_00000584: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000585: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000586: ldc.i4 00000FFF
;	mov	ax,	4095	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000058B: bne.un.s 02
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-2],	4095	; [optimize] add
	jne	PE_0000058F
;PE_0000058D: br.s 02
	jmp	PE_00000591
PE_0000058F: ;br.s C4
	jmp	PE_00000555
PE_00000591: ;[native] inline
	pop	es
;PE_0000059C: call 06000021
	call	Mona_Console__WriteLine
;PE_000005A1: ldloc.1
	push	word [ss:bp-4]
;PE_000005A2: stloc.2
	pop	word [ss:bp-6]
;PE_000005A3: br.s 00
;	jmp	PE_000005A5	; [optimize] ignore
PE_000005A5: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000005A6: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	4

; void Mona.SecondBoot::WriteSize(u2)
Mona_SecondBoot__WriteSize__u2:
	push	bp
	mov	bp,	sp
;PE_000005B4: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000005B5: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_000005BA: ldsfld 04000007
;	push	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
;PE_000005BF: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] add
;PE_000005C4: [native] set register
	mov	ax,	[ss:bp+4]
;PE_000005CA: [native] inline
	mov	[es:di],	ax
;PE_000005D5: [native] set register
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;PE_000005DB: [native] inline
	mov	[es:di+2],	ax
;PE_000005E6: ldsfld 04000007
;	push	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
;PE_000005EB: ldc.i4.4
;	mov	ax,	4	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000005EC: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000005EE: stsfld 04000007
;	pop	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
;	mov	word [cs:Mona_SecondBoot__sizeptr],	ax	; [optimize] add, [optimize] ignore
	add	word [cs:Mona_SecondBoot__sizeptr],	4	; [optimize] add
;PE_000005F3: ret
	pop	bp
	ret	2

; void Mona.SecondBoot::.cctor()
Mona_SecondBoot___cctor:
;PE_00000600: ldc.i4 00000120
	mov	ax,	288
;	push	ax	; [optimize] ignore
;PE_00000605: stsfld 04000006
;	pop	word [cs:Mona_SecondBoot__fileseg]	; [optimize] ignore
	mov	word [cs:Mona_SecondBoot__fileseg],	ax	; [optimize] add
;PE_0000060A: ldc.i4 00001104
	mov	ax,	4356
;	push	ax	; [optimize] ignore
;PE_0000060F: stsfld 04000007
;	pop	word [cs:Mona_SecondBoot__sizeptr]	; [optimize] ignore
	mov	word [cs:Mona_SecondBoot__sizeptr],	ax	; [optimize] add
;PE_00000614: ret
	ret

; class Mona.Str

; u2 Mona.Str::GetLength(string)
u2__Mona_Str__GetLength__string:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000638: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_0000063E: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+4]	; [optimize] add
;PE_00000643: [native] inline
	mov	al,	[si]
;PE_0000064E: [native] inline
	mov	ah,	0
;PE_00000659: [native] get register
;	push	ax	; [optimize] ignore
;PE_0000065E: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_0000065F: br.s 00
;	jmp	PE_00000661	; [optimize] ignore
;PE_00000661: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000662: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; boolean Mona.Str::StartsWith(string, u2)
boolean__Mona_Str__StartsWith__string_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000670: ldarg.0
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_00000676: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+6]	; [optimize] add
;PE_0000067B: [native] inline
	mov	cl,	[si]
;PE_00000686: [native] inline
	mov	ch,	0
;PE_00000691: [native] inline
	inc	si
;PE_0000069C: [native] set register
	mov	di,	[ss:bp+4]
;PE_000006A2: [native] inline
	rep	cmpsb
;PE_000006AD: [native] get flag
	jz	NM_00000000
	xor	ax,	ax
	jmp	NM_00000001
NM_00000000: ;[native] get flag internal
	mov	ax,	1
NM_00000001: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_000006B2: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006B3: br.s 00
;	jmp	PE_000006B5	; [optimize] ignore
;PE_000006B5: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000006B6: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	4

; u2 Mona.Str::ReadNumber(u2)
u2__Mona_Str__ReadNumber__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	6
;PE_000006C4: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000006C5: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000006C6: [native] set register
	mov	di,	[ss:bp+4]
;PE_000006CC: br.s 42
	jmp	PE_00000710
PE_000006CE: ;[native] inline
	mov	al,	[es:di]
;PE_000006D9: [native] inline
	mov	ah,	0
;PE_000006E4: [native] inline
	inc	di
;PE_000006EF: [native] get register
;	push	ax	; [optimize] ignore
;PE_000006F4: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000006F5: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000006F6: ldc.i4.s 30
;	mov	ax,	48	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000006F8: blt.s 05
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	48	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	48	; [optimize] add
	jc	PE_000006FF
;PE_000006FA: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_000006FB: ldc.i4.s 39
	mov	ax,	57
;	push	ax	; [optimize] ignore
;PE_000006FD: ble.s 02
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-4]	; [optimize] add
	jnc near	PE_00000701
PE_000006FF: ;br.s 11
	jmp	PE_00000712
PE_00000701: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000702: ldc.i4.s 0A
	mov	ax,	10
;	push	ax	; [optimize] ignore
;PE_00000704: mul
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-2]	; [optimize] add
	mul	dx
;	push	ax	; [optimize] ignore
;PE_00000706: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000707: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000708: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000709: ldc.i4.s 30
;	mov	ax,	48	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000070B: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	48	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-4]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	48	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000070D: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000070F: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
PE_00000710: ;br.s BC
	jmp	PE_000006CE
PE_00000712: ;ldloc.0
	push	word [ss:bp-2]
;PE_00000713: stloc.2
	pop	word [ss:bp-6]
;PE_00000714: br.s 00
;	jmp	PE_00000716	; [optimize] ignore
;PE_00000716: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000717: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; class Mona.A20

; void Mona.A20::Enable()
Mona_A20__Enable:
;PE_00000738: call 0600000E
	call	Mona_A20__Wait
;PE_0000073D: ldc.i4.s 64
;	mov	ax,	100	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	100	; [optimize] add
;PE_0000073F: ldc.i4 000000D1
	mov	ax,	209
;	push	ax	; [optimize] ignore
;PE_00000744: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_00000749: call 0600000E
	call	Mona_A20__Wait
;PE_0000074E: ldc.i4.s 60
;	mov	ax,	96	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	96	; [optimize] add
;PE_00000750: ldc.i4 000000DF
	mov	ax,	223
;	push	ax	; [optimize] ignore
;PE_00000755: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_0000075A: call 0600000E
	call	Mona_A20__Wait
;PE_0000075F: ldc.i4.s 64
;	mov	ax,	100	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
	mov	dx,	100	; [optimize] add
;PE_00000761: ldc.i4 000000FF
	mov	ax,	255
;	push	ax	; [optimize] ignore
;PE_00000766: [native] out
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	out	dx,	al
;PE_0000076B: ret
	ret

; void Mona.A20::Wait()
Mona_A20__Wait:
;PE_00000778: br.s 00
;	jmp	PE_0000077A	; [optimize] ignore
PE_0000077A: ;[native] in
	in	al,	100
	mov	ah,	0
;	push	ax	; [optimize] ignore
	mov	dx,	ax	; [optimize] add
;PE_00000781: ldc.i4.2
	mov	ax,	2
;	push	ax	; [optimize] ignore
;PE_00000782: and
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	and	ax,	dx
;	push	ax	; [optimize] ignore
;PE_00000783: brtrue.s F5
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_0000077A
;PE_00000785: ret
	ret

; class Mona.FDC

Mona_FDC__buffer dw 0

; u2 Mona.FDC::SearchFile(string)
u2__Mona_FDC__SearchFile__string:
	push	bp
	mov	bp,	sp
	sub	sp,	10
;PE_000007A8: [native] inline
	push	es
;PE_000007B3: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_000007B8: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_000007BD: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000007BE: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000007BF: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000007C0: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000007C1: ldarg.0
	push	word [ss:bp+4]
;PE_000007C2: call 06000015
	call	string__Mona_FDC__ConvertFileName__string
;	push	ax	; [optimize] ignore
;PE_000007C7: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_000007C8: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000007C9: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_000007CA: br.s 31
	jmp	PE_000007FD
PE_000007CC: ;ldloc.2
	push	word [ss:bp-6]
;PE_000007CD: ldloc.0
	push	word [ss:bp-2]
;PE_000007CE: call 0600000A
	call	boolean__Mona_Str__StartsWith__string_u2
;	push	ax	; [optimize] ignore
;PE_000007D3: brfalse.s 1D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_000007F2
;PE_000007D5: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000007D6: ldc.i4.s 1A
	mov	ax,	26
;	push	ax	; [optimize] ignore
;PE_000007D8: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-2]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000007DA: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_000007DF: [native] inline
	mov	ax,	[es:di]
;PE_000007EA: [native] get register
;	push	ax	; [optimize] ignore
;PE_000007EF: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000007F0: br.s 13
	jmp	PE_00000805
PE_000007F2: ;ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000007F3: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007F4: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007F6: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
;	mov	word [ss:bp-8],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-8],	1	; [optimize] add
;PE_000007F7: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000007F8: ldc.i4.s 20
;	mov	ax,	32	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007FA: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000007FC: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-2],	32	; [optimize] add
PE_000007FD: ;ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_000007FE: ldc.i4 000000E0
;	mov	ax,	224	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000803: blt.s C7
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	224	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-8],	224	; [optimize] add
	jc	PE_000007CC
PE_00000805: ;[native] inline
	pop	es
;PE_00000810: ldloc.1
	push	word [ss:bp-4]
;PE_00000811: stloc.s 04
	pop	word [ss:bp-10]
;PE_00000813: br.s 00
;	jmp	PE_00000815	; [optimize] ignore
;PE_00000815: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000817: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-10]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; u2 Mona.FDC::GetFAT(u2)
u2__Mona_FDC__GetFAT__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000824: [native] set register
	mov	si,	[ss:bp+4]
;PE_0000082A: [native] inline
	push	es
;PE_00000835: ldc.i4 00009000
	mov	ax,	36864
;	push	ax	; [optimize] ignore
;PE_0000083A: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000083F: ldc.i4 00006000
;	mov	ax,	24576	; [optimize] ignore
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	24576	; [optimize] add, [optimize] ignore
;PE_00000844: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_00000845: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+4]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	24576	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000847: [native] set register
;	pop	bx	; [optimize] ignore
	mov	bx,	ax	; [optimize] add
;PE_0000084C: [native] inline
	shr	si,	1
;PE_00000857: [native] inline
	mov	cx,	[es:si+bx]
;PE_00000862: [native] get flag
	jc	NM_00000002
	xor	ax,	ax
	jmp	NM_00000003
NM_00000002: ;[native] get flag internal
	mov	ax,	1
NM_00000003: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_00000867: brfalse.s 0D
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jz	PE_00000876
;PE_00000869: [native] inline
	shr	cx,	4
;PE_00000874: br.s 0B
	jmp	PE_00000881
PE_00000876: ;[native] inline
	and	ch,	0x0f
PE_00000881: ;[native] inline
	pop	es
;PE_0000088C: [native] get register
;	push	cx	; [optimize] ignore
;PE_00000891: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	cx	; [optimize] add
;PE_00000892: br.s 00
;	jmp	PE_00000894	; [optimize] ignore
;PE_00000894: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000895: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.FDC::ReadSectors(u2, u2, u2)
Mona_FDC__ReadSectors__u2_u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	12
;PE_000008A4: [native] inline
	push	es
;PE_000008AF: br 00000099
	jmp	PE_0000094D
PE_000008B4: ;ldarg.2
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_000008B6: neg
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+4]	; [optimize] add
	neg	ax
;	push	ax	; [optimize] ignore
;PE_000008B8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000008B9: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008BA: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008BB: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;	mov	dx,	1	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
;	sub	ax,	1	; [optimize] add, [optimize] ignore
;	dec	ax	; [Optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008BD: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
	dec	word [ss:bp-2]	; [optimize] add
;PE_000008BE: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008BF: ldc.i4.s 09
;	mov	ax,	9	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008C1: shr
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	9	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	shr	ax,	cl
;	push	ax	; [optimize] ignore
;PE_000008C3: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000008C4: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008C5: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008C6: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008C8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
;	mov	word [ss:bp-2],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-2],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-2]	; [Optimize] add
;PE_000008C9: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008CA: ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_000008CB: ble.s 02
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+6]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jnc near	PE_000008CF
;PE_000008CD: ldarg.1
	push	word [ss:bp+6]
;PE_000008CE: stloc.0
	pop	word [ss:bp-2]
PE_000008CF: ;br.s 64
	jmp	PE_00000935
PE_000008D1: ;ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000008D2: ldc.i4.s 24
;	mov	ax,	36	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008D4: div
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	36	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+8]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	ax	; [optimize] ignore
;PE_000008D5: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008D6: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_000008D7: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_000008D8: ldc.i4.s 24
;	mov	ax,	36	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008DA: rem
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	36	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+8]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	dx	; [optimize] ignore
;PE_000008DB: conv.u1
;	pop	ax	; [optimize] ignore
;	mov	ax,	dx	; [optimize] add, [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008DC: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
;	mov	word [ss:bp-6],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-6],	dx	; [optimize] add
;PE_000008DD: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000008DE: ldc.i4.s 12
;	mov	ax,	18	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008E0: div
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	18	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	ax	; [optimize] ignore
;PE_000008E1: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008E2: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_000008E3: ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_000008E4: ldc.i4.s 12
;	mov	ax,	18	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_000008E6: rem
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	18	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-6]	; [optimize] add
	xor	dx,	dx
	div	cx
;	push	dx	; [optimize] ignore
;PE_000008E7: conv.u1
;	pop	ax	; [optimize] ignore
;	mov	ax,	dx	; [optimize] add, [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008E8: stloc.s 04
;	pop	word [ss:bp-10]	; [optimize] ignore
;	mov	word [ss:bp-10],	ax	; [optimize] add, [optimize] ignore
	mov	word [ss:bp-10],	dx	; [optimize] add
;PE_000008EA: ldc.i4.s 12
	mov	ax,	18
;	push	ax	; [optimize] ignore
;PE_000008EC: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_000008EE: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-10]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000008EF: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008F0: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
;PE_000008F2: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_000008F4: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008F5: ble.s 04
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-12]	; [optimize] add
	jnc near	PE_000008FB
;PE_000008F7: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000008F8: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	ah,	0
;	push	ax	; [optimize] ignore
;PE_000008F9: stloc.s 05
;	pop	word [ss:bp-12]	; [optimize] ignore
	mov	word [ss:bp-12],	ax	; [optimize] add
PE_000008FB: ;ldloc.s 05
	push	word [ss:bp-12]
;PE_000008FD: ldarg.2
	push	word [ss:bp+4]
;PE_000008FE: ldloc.1
	push	word [ss:bp-4]
;PE_000008FF: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000901: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_00000902: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-10]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp-10]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000903: conv.u1
;	pop	ax	; [optimize] ignore
	mov	ah,	0
	push	ax
;PE_00000904: ldloc.3
	push	word [ss:bp-8]
;PE_00000905: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_00000906: call 06000013
	call	boolean__Mona_FDC__Read__u1_u2_u1_u1_u1_u1
;	push	ax	; [optimize] ignore
;PE_0000090B: brtrue.s 09
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000916
;PE_0000090D: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
	push	ax
;PE_0000090E: call 06000014
	call	boolean__Mona_FDC__Reset__u1
;	push	ax	; [optimize] ignore
;PE_00000913: pop
;	pop	ax	; [optimize] ignore
;PE_00000914: br.s 1F
	jmp	PE_00000935
PE_00000916: ;ldarg.2
	push	word [ss:bp+4]
;PE_00000917: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000919: ldc.i4.s 09
;	mov	ax,	9	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_0000091B: shl
;	pop	cx	; [optimize] ignore
;	mov	cx,	ax	; [optimize] add, [optimize] ignore
	mov	cx,	9	; [optimize] add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-12]	; [optimize] add
	shl	ax,	cl
;	push	ax	; [optimize] ignore
;PE_0000091D: add
;	pop	ax	; [optimize] ignore
	pop	dx
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_0000091F: starg.s 02
;	pop	word [ss:bp+4]	; [optimize] ignore
	mov	word [ss:bp+4],	ax	; [optimize] add
;PE_00000921: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_00000922: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000924: add
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-12]	; [optimize] add
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+8]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp+8]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000926: starg.s 00
;	pop	word [ss:bp+8]	; [optimize] ignore
	mov	word [ss:bp+8],	ax	; [optimize] add
;PE_00000928: ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_00000929: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_0000092B: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp+6]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-12]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000092D: starg.s 01
;	pop	word [ss:bp+6]	; [optimize] ignore
	mov	word [ss:bp+6],	ax	; [optimize] add
;PE_0000092F: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000930: ldloc.s 05
;	push	word [ss:bp-12]	; [optimize] ignore
;PE_00000932: sub
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-12]	; [optimize] add, [optimize] ignore
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
;	sub	ax,	dx	; [optimize] ignore
	sub	ax,	word [ss:bp-12]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000934: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
PE_00000935: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000936: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000937: bgt.s 98
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp-2]	; [optimize] add
	jc	PE_000008D1
;PE_00000939: [native] get register
;	push	es	; [optimize] ignore
;PE_0000093E: ldc.i4 00001000
	mov	ax,	4096
;	push	ax	; [optimize] ignore
;PE_00000943: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	es	; [optimize] add
	add	ax,	dx
;	push	ax	; [optimize] ignore
;PE_00000945: [native] set register
;	pop	es	; [optimize] ignore
	mov	es,	ax	; [optimize] add
;PE_0000094A: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000094B: starg.s 02
;	pop	word [ss:bp+4]	; [optimize] ignore
	mov	word [ss:bp+4],	ax	; [optimize] add
PE_0000094D: ;ldarg.1
;	push	word [ss:bp+6]	; [optimize] ignore
;PE_0000094E: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_0000094F: bgt FFFFFF60
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+6]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
	cmp	ax,	word [ss:bp+6]	; [optimize] add
	jc	PE_000008B4
;PE_00000954: [native] inline
	pop	es
;PE_0000095F: ret
	mov	sp,	bp
	pop	bp
	ret	6

; boolean Mona.FDC::Read(u1, u2, u1, u1, u1, u1)
boolean__Mona_FDC__Read__u1_u2_u1_u1_u1_u1:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_0000096C: [native] set register
	mov	ah,	2
;PE_00000972: [native] set register
	mov	al,	[ss:bp+14]
;PE_00000978: [native] set register
	mov	bx,	[ss:bp+12]
;PE_0000097E: [native] set register
	mov	ch,	[ss:bp+10]
;PE_00000984: [native] set register
	mov	cl,	[ss:bp+8]
;PE_0000098A: [native] set register
	mov	dh,	[ss:bp+6]
;PE_00000991: [native] set register
	mov	dl,	[ss:bp+4]
;PE_00000998: [native] inline
	int	0x13
;PE_000009A3: [native] get flag
	jnc	NM_00000004
	xor	ax,	ax
	jmp	NM_00000005
NM_00000004: ;[native] get flag internal
	mov	ax,	1
NM_00000005: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_000009A8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000009A9: br.s 00
;	jmp	PE_000009AB	; [optimize] ignore
;PE_000009AB: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000009AC: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	12

; boolean Mona.FDC::Reset(u1)
boolean__Mona_FDC__Reset__u1:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_000009BC: [native] set register
	mov	ah,	0
;PE_000009C2: [native] set register
	mov	dl,	[ss:bp+4]
;PE_000009C8: [native] inline
	int	0x13
;PE_000009D3: [native] get flag
	jnc	NM_00000006
	xor	ax,	ax
	jmp	NM_00000007
NM_00000006: ;[native] get flag internal
	mov	ax,	1
NM_00000007: ;[native] get flag internal
;	push	ax	; [optimize] ignore
;PE_000009D8: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000009D9: br.s 00
;	jmp	PE_000009DB	; [optimize] ignore
;PE_000009DB: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_000009DC: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; string Mona.FDC::ConvertFileName(string)
string__Mona_FDC__ConvertFileName__string:
	push	bp
	mov	bp,	sp
	sub	sp,	10
;PE_000009EC: ldarg.0
	push	word [ss:bp+4]
;PE_000009ED: call 06000009
	call	u2__Mona_Str__GetLength__string
;	push	ax	; [optimize] ignore
;PE_000009F2: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_000009F3: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_000009F9: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_000009FA: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [ss:bp+4]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_000009FC: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	ax	; [optimize] add
;PE_00000A01: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_00000A0B: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_00000A0C: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_FDC__buffer]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A0E: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_00000A13: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A14: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000A15: br.s 1D
	jmp	PE_00000A34
PE_00000A17: ;[native] inline
	mov	byte [cs:di],	' '
;PE_00000A22: [native] get register
;	push	di	; [optimize] ignore
;PE_00000A27: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A28: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	di	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	di	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A2A: [native] set register
;	pop	di	; [optimize] ignore
;	mov	di,	ax	; [optimize] add, [optimize] ignore
;	add	di,	1	; [optimize] add, [optimize] ignore
	inc	di	; [Optimize] add
;PE_00000A2F: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000A30: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A31: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A33: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
PE_00000A34: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000A35: ldc.i4.s 0B
;	mov	ax,	11	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A37: blt.s DE
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	cmp	dx,	ax	; [optimize] ignore
;	cmp	dx,	11	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-4],	11	; [optimize] add
	jc	PE_00000A17
;PE_00000A39: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_00000A43: ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_00000A44: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_FDC__buffer]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A46: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_00000A4B: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A4C: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
	mov	word [ss:bp-6],	ax	; [optimize] add
;PE_00000A4D: br.s 5B
	jmp	PE_00000AAA
PE_00000A4F: ;[native] inline
	mov	al,	[cs:si]
;PE_00000A5A: [native] set register
	mov	ah,	0
;PE_00000A60: [native] get register
;	push	si	; [optimize] ignore
;PE_00000A65: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A66: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	si	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	si	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A68: [native] set register
;	pop	si	; [optimize] ignore
;	mov	si,	ax	; [optimize] add, [optimize] ignore
;	add	si,	1	; [optimize] add, [optimize] ignore
	inc	si	; [Optimize] add
;PE_00000A6D: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000A72: stloc.3
;	pop	word [ss:bp-8]	; [optimize] ignore
	mov	word [ss:bp-8],	ax	; [optimize] add
;PE_00000A73: ldloc.3
;	push	word [ss:bp-8]	; [optimize] ignore
;PE_00000A74: ldc.i4.s 2E
;	mov	ax,	46	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A76: bne.un.s 15
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	ax,	word [ss:bp-8]	; [optimize] add, [optimize] ignore
	cmp	word [ss:bp-8],	46	; [optimize] add
	jne	PE_00000A8D
;PE_00000A78: ldsfld 0400000C
;	push	word [cs:Mona_FDC__buffer]	; [optimize] ignore
;PE_00000A82: ldc.i4.s 09
	mov	ax,	9
;	push	ax	; [optimize] ignore
;PE_00000A84: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [cs:Mona_FDC__buffer]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
	add	ax,	word [cs:Mona_FDC__buffer]	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000A86: [native] set register
;	pop	di	; [optimize] ignore
	mov	di,	ax	; [optimize] add
;PE_00000A8B: br.s 18
	jmp	PE_00000AA5
PE_00000A8D: ;[native] inline
	mov	[cs:di],	al
;PE_00000A98: [native] get register
;	push	di	; [optimize] ignore
;PE_00000A9D: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000A9E: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	di	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	di	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000AA0: [native] set register
;	pop	di	; [optimize] ignore
;	mov	di,	ax	; [optimize] add, [optimize] ignore
;	add	di,	1	; [optimize] add, [optimize] ignore
	inc	di	; [Optimize] add
PE_00000AA5: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000AA6: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000AA7: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-6]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000AA9: stloc.2
;	pop	word [ss:bp-6]	; [optimize] ignore
;	mov	word [ss:bp-6],	ax	; [optimize] add, [optimize] ignore
	add	word [ss:bp-6],	1	; [optimize] add
PE_00000AAA: ;ldloc.2
;	push	word [ss:bp-6]	; [optimize] ignore
;PE_00000AAB: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000AAC: blt.s A1
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-6]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_00000A4F
;PE_00000AAE: ldsfld 0400000C
	push	word [cs:Mona_FDC__buffer]
;PE_00000AB3: stloc.s 04
	pop	word [ss:bp-10]
;PE_00000AB5: br.s 00
;	jmp	PE_00000AB7	; [optimize] ignore
;PE_00000AB7: ldloc.s 04
;	push	word [ss:bp-10]	; [optimize] ignore
;PE_00000AB9: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-10]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.FDC::.cctor()
Mona_FDC___cctor:
;PE_00000AC8: ldstr 700003F5
	mov	ax,	US_000003F5
;	push	ax	; [optimize] ignore
;PE_00000ACD: stsfld 0400000C
;	pop	word [cs:Mona_FDC__buffer]	; [optimize] ignore
	mov	word [cs:Mona_FDC__buffer],	ax	; [optimize] add
;PE_00000AD2: ret
	ret

; class Mona.VESA

Mona_VESA__Resolution dw 0
Mona_VESA__Bpp dw 0

; boolean Mona.VESA::TryMode(u2, u2, u2)
boolean__Mona_VESA__TryMode__u2_u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000AF4: ldarg.0
;	push	word [ss:bp+8]	; [optimize] ignore
;PE_00000AF5: ldc.i4 00004000
	mov	ax,	16384
;	push	ax	; [optimize] ignore
;PE_00000AFA: or
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp+8]	; [optimize] add, [optimize] ignore
;	or	ax,	dx	; [optimize] ignore
	or	ax,	word [ss:bp+8]	; [optimize] add
	push	ax
;PE_00000AFC: call 06000019
	call	boolean__Mona_VESA__SetMode__u2
;	push	ax	; [optimize] ignore
;PE_00000B01: brtrue.s 04
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000B07
;PE_00000B03: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000B04: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000B05: br.s 1D
	jmp	PE_00000B24
PE_00000B07: ;ldarg.1
	push	word [ss:bp+6]
;PE_00000B08: call 0600001A
	call	boolean__Mona_VESA__GetInfo__u2
;	push	ax	; [optimize] ignore
;PE_00000B0D: brtrue.s 04
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000B13
;PE_00000B0F: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000B10: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000B11: br.s 11
	jmp	PE_00000B24
PE_00000B13: ;ldarg.0
	push	word [ss:bp+8]
;PE_00000B14: ldarg.2
	push	word [ss:bp+4]
;PE_00000B15: call 0600001B
	call	boolean__Mona_VESA__GetInfoDetails__u2_u2
;	push	ax	; [optimize] ignore
;PE_00000B1A: brtrue.s 04
;	pop	ax	; [optimize] ignore
	or	ax,	ax
	jnz	PE_00000B20
;PE_00000B1C: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000B1D: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000B1E: br.s 04
	jmp	PE_00000B24
PE_00000B20: ;ldc.i4.1
	mov	ax,	1
;	push	ax	; [optimize] ignore
;PE_00000B21: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000B22: br.s 00
;	jmp	PE_00000B24	; [optimize] ignore
PE_00000B24: ;ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000B25: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	6

; boolean Mona.VESA::SetMode(u2)
boolean__Mona_VESA__SetMode__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000B34: [native] set register
	mov	ax,	20226
;PE_00000B3E: [native] set register
	mov	bx,	[ss:bp+4]
;PE_00000B44: [native] inline
	int	0x10
;PE_00000B4F: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000B54: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000B56: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	dx,	79	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_00000008
	xor	ax,	ax
	jmp	NM_00000009
NM_00000008: ;ceq internal
	mov	ax,	1
NM_00000009: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000B58: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000B59: br.s 00
;	jmp	PE_00000B5B	; [optimize] ignore
;PE_00000B5B: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000B5C: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; boolean Mona.VESA::GetInfo(u2)
boolean__Mona_VESA__GetInfo__u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000B6C: [native] set register
	mov	ax,	20224
;PE_00000B76: [native] set register
	mov	di,	[ss:bp+4]
;PE_00000B7C: [native] inline
	int	0x10
;PE_00000B87: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000B8C: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000B8E: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	dx,	79	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_0000000A
	xor	ax,	ax
	jmp	NM_0000000B
NM_0000000A: ;ceq internal
	mov	ax,	1
NM_0000000B: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000B90: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000B91: br.s 00
;	jmp	PE_00000B93	; [optimize] ignore
;PE_00000B93: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000B94: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	2

; boolean Mona.VESA::GetInfoDetails(u2, u2)
boolean__Mona_VESA__GetInfoDetails__u2_u2:
	push	bp
	mov	bp,	sp
	sub	sp,	2
;PE_00000BA4: [native] set register
	mov	ax,	20225
;PE_00000BAE: [native] set register
	mov	cx,	[ss:bp+6]
;PE_00000BB4: [native] set register
	mov	di,	[ss:bp+4]
;PE_00000BBA: [native] inline
	int	0x10
;PE_00000BC5: [native] get register
;	push	ax	; [optimize] ignore
;	mov	dx,	ax	; [optimize] add, [optimize] ignore
;PE_00000BCA: ldc.i4.s 4F
;	mov	ax,	79	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000BCC: ceq
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	cmp	ax,	dx	; [optimize] ignore
;	cmp	dx,	79	; [optimize] add, [optimize] ignore
	cmp	ax,	79	; [optimize] add
	je	NM_0000000C
	xor	ax,	ax
	jmp	NM_0000000D
NM_0000000C: ;ceq internal
	mov	ax,	1
NM_0000000D: ;ceq internal
;	push	ax	; [optimize] ignore
;PE_00000BCE: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000BCF: br.s 00
;	jmp	PE_00000BD1	; [optimize] ignore
;PE_00000BD1: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000BD2: ret
;	pop	ax	; [optimize] ignore
	mov	ax,	word [ss:bp-2]	; [optimize] add
	mov	sp,	bp
	pop	bp
	ret	4

; void Mona.VESA::SetVGA()
Mona_VESA__SetVGA:
;PE_00000BE0: [native] set register
	mov	ax,	18
;PE_00000BE7: [native] inline
	int	0x10
;PE_00000BF2: ret
	ret

; void Mona.VESA::.cctor()
Mona_VESA___cctor:
;PE_00000C00: ldc.i4 00000320
	mov	ax,	800
;	push	ax	; [optimize] ignore
;PE_00000C05: stsfld 04000010
;	pop	word [cs:Mona_VESA__Resolution]	; [optimize] ignore
	mov	word [cs:Mona_VESA__Resolution],	ax	; [optimize] add
;PE_00000C0A: ldc.i4.s 20
	mov	ax,	32
;	push	ax	; [optimize] ignore
;PE_00000C0C: stsfld 04000011
;	pop	word [cs:Mona_VESA__Bpp]	; [optimize] ignore
	mov	word [cs:Mona_VESA__Bpp],	ax	; [optimize] add
;PE_00000C11: ret
	ret

; class Mona.Console

; void Mona.Console::Write(char)
Mona_Console__Write__char:
	push	bp
	mov	bp,	sp
;PE_00000C34: [native] set register
	mov	ax,	[ss:bp+4]
;PE_00000C3A: [native] set register
	mov	ah,	14
;PE_00000C41: [native] set register
;	mov	bx,	0	; [optimize] ignore
	xor	bx,	bx	; [optimize] add
;PE_00000C47: [native] inline
	int	0x10
;PE_00000C52: ret
	pop	bp
	ret	2

; void Mona.Console::Write(string)
Mona_Console__Write__string:
	push	bp
	mov	bp,	sp
	sub	sp,	4
;PE_00000C60: ldarg.0
;	push	word [ss:bp+4]	; [optimize] ignore
;PE_00000C66: [native] set register
;	pop	si	; [optimize] ignore
	mov	si,	word [ss:bp+4]	; [optimize] add
;PE_00000C6B: [native] inline
	cs	lodsb
;PE_00000C76: [native] set register
	mov	ah,	0
;PE_00000C7C: [native] get register
;	push	ax	; [optimize] ignore
;PE_00000C81: stloc.0
;	pop	word [ss:bp-2]	; [optimize] ignore
	mov	word [ss:bp-2],	ax	; [optimize] add
;PE_00000C82: ldc.i4.0
;	mov	ax,	0	; [optimize] ignore
	xor	ax,	ax	; [optimize] add
;	push	ax	; [optimize] ignore
;PE_00000C83: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
	mov	word [ss:bp-4],	ax	; [optimize] add
;PE_00000C84: br.s 27
	jmp	PE_00000CAD
PE_00000C86: ;[native] inline
	cs	lodsb
;PE_00000C91: [native] set register
	mov	ah,	14
;PE_00000C98: [native] set register
;	mov	bx,	0	; [optimize] ignore
	xor	bx,	bx	; [optimize] add
;PE_00000C9E: [native] inline
	int	0x10
;PE_00000CA9: ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000CAA: ldc.i4.1
;	mov	ax,	1	; [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000CAB: add
;	pop	ax	; [optimize] ignore
;	pop	dx	; [optimize] ignore
;	mov	dx,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	add	ax,	dx	; [optimize] ignore
;	add	ax,	word [ss:bp-4]	; [optimize] add, [optimize] ignore
;	push	ax	; [optimize] ignore
;PE_00000CAC: stloc.1
;	pop	word [ss:bp-4]	; [optimize] ignore
;	mov	word [ss:bp-4],	ax	; [optimize] add, [optimize] ignore
;	add	word [ss:bp-4],	1	; [optimize] add, [optimize] ignore
	inc	word [ss:bp-4]	; [Optimize] add
PE_00000CAD: ;ldloc.1
;	push	word [ss:bp-4]	; [optimize] ignore
;PE_00000CAE: ldloc.0
;	push	word [ss:bp-2]	; [optimize] ignore
;PE_00000CAF: blt.s D5
;	pop	ax	; [optimize] ignore
;	mov	ax,	word [ss:bp-2]	; [optimize] add, [optimize] ignore
;	pop	dx	; [optimize] ignore
	mov	dx,	word [ss:bp-4]	; [optimize] add
;	cmp	dx,	ax	; [optimize] ignore
	cmp	dx,	word [ss:bp-2]	; [optimize] add
	jc	PE_00000C86
;PE_00000CB1: ret
	mov	sp,	bp
	pop	bp
	ret	2

; void Mona.Console::WriteLine()
Mona_Console__WriteLine:
;PE_00000CC0: ldstr 70000431
	mov	ax,	US_00000431
	push	ax
;PE_00000CC5: call 06000020
	call	Mona_Console__Write__string
;PE_00000CCA: ret
	ret

; void Mona.Console::WriteLine(string)
Mona_Console__WriteLine__string:
	push	bp
	mov	bp,	sp
;PE_00000CD8: ldarg.0
	push	word [ss:bp+4]
;PE_00000CD9: call 06000020
	call	Mona_Console__Write__string
;PE_00000CDE: call 06000021
	call	Mona_Console__WriteLine
;PE_00000CE3: ret
	pop	bp
	ret	2

US_00000001 db 5, "/\ /\", 0x00
US_0000000D db 23, " 'V `) < Booting MONA!!", 0x00
US_00000045 db 10, "KERNEL.BIN", 0x00
US_0000005B db 8, "FILE.BIN", 0x00
US_0000006D db 11, "PROCESS.BIN", 0x00
US_00000085 db 11, "MONITOR.BIN", 0x00
US_0000009D db 8, "MONA.CFG", 0x00
US_000000AF db 14, "Boot failure!!", 0x00
US_000000CD db 18, "System has halted.", 0x00
US_000000FB db 33, "Default settings will be applied.", 0x00
US_00000183 db 16, "VESA_RESOLUTION=", 0x00
US_000001A5 db 9, "VESA_BPP=", 0x00
US_00000219 db 8, "Reading ", 0x00
US_0000022B db 20, "ERROR: can not find!", 0x00
US_00000265 db 1, ".", 0x00
US_000003F5 db 11, "           ", 0x00
US_00000431 db 2, 0x0d, 0x0a, 0x00

; --- BEGIN: secondboot32.asm

%define KERNEL_SEG 0x0100

;-------------------------------------------------------------------------------
; entry point
;-------------------------------------------------------------------------------

SecondBootMain:
        call    ILMain

        mov     ax, cs
        mov     ds, ax
        mov     si, RealToProtect
        mov     ax, KERNEL_SEG
        mov     es, ax
        xor     di, di
        mov     cx, gdt_end - RealToProtect
        rep     movsb

        jmp     KERNEL_SEG:0

;-------------------------------------------------------------------------------
; To Protect mode
;-------------------------------------------------------------------------------
RealToProtect:
;;; Real to Protect
        mov     ax, cs          ; we jump from firstboot
        mov     ds, ax          ; so ds is changed
        lgdt    [gdtr - RealToProtect]  ; load gdtr
        cli                     ; disable interrupt
        mov     eax, cr0        ; real
        or      eax, 1          ; to
        mov     cr0, eax        ; protect
        jmp     flush_q1
flush_q1:
	jmp     0x0008:(KERNEL_SEG * 16 + set_cs_desc1) - RealToProtect

[bits 32]
set_cs_desc1:
        mov     ax, 0x10        ; ds & es
        mov     ds, ax          ; selector is
        mov     es, ax          ; 0x10
        mov     ax, 0x18        ; ss selector
        mov     ss, ax          ; is 0x18
        mov     esp, 0x80000    ; sp is 3MB
        push    eax
        jmp     0x0200 + RealToProtect

;-------------------------------------------------------------------------------
; GDT definition: It is temporary.
;-------------------------------------------------------------------------------
gdtr:
        dw gdt_end - gdt0 - 1   ; gdt limit
        dd (KERNEL_SEG * 16 + gdt0) - RealToProtect  ; start adderess

gdt0:                           ; segment 00
        dw 0                    ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0                    ; segment type
        db 0                    ; segment limitH
        db 0                    ; segment baseH

gdt08:                          ; segment 08(code segment)
        dw 0xffff               ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x9a                 ; Type Code
        db 0xff                 ; segment limitH
        db 0                    ; segment baseH

gdt10:                          ; segment 10(data segment)
        dw 0xffff               ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x92                 ; Type Data
        db 0xff                 ; segment limitH
        db 0                    ; segment baseH

gdt18:                          ; segment 18(stack segment)
        dw 0                    ; segment limitL
        dw 0                    ; segment baseL
        db 0                    ; segment baseM
        db 0x96                 ; Type Stack
        db 0xC0                 ; segment limitH
        db 0                    ; segment baseH

gdt_end:                        ; end of gdt

; --- END
