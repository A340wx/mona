;; prompt string
(define (mona-prompt-string)
  (string-append "mona:"
                 (fs-path (fs-current-directory))
                 ">"))

(define mona-gui-auto-start #t)

(define skip-unit-test? #f)

(define *tests-on-cui* '(
;                         "/APPS/TFLOAD.APP/TFLOAD.EX5"
                         "/APPS/TSTREAM.EX5"
                         "/APPS/TBLOCK.EX5"
                         "/APPS/TMOSH.EX5"
                         "/APPS/TPROCESS.EX5"
                         "/APPS/TCLIP.EX5"
                         "/APPS/TFILE.APP/TFILE.EX5"
                         "/APPS/TVIRTIO.EX5"
                         "/APPS/TSTACK.APP/TSTACK.EX5"
                         "/APPS/TGMP.EX5"
                         "/APPS/TMISC.EX5"
                         "/APPS/TMUTEX.EX5"
                         "/APPS/TCOND.EX5"
                         "/APPS/TSTDIO.APP/TSTDIO.EX5"
                         "/APPS/TMSG.EX5"
                         "/APPS/TSYSCALL.EX5"
                         "/APPS/TRAMDISK.EX5"
                         "/APPS/TDIE.EX5"
                         "/APPS/TSOCK.EX5"
                         ))

(define *tests-on-gui* '("/APPS/MONAGUI/TMONAGUI.EX5"))

(define (test-end) (print "all tests done"))

(define (gnote)
  (call-process "/APPS/FRECV.EX5 GNOTE.EX5")
  (call-process "/MEM/GNOTE.EX5")
  (gnote))

(define (my-display)
  (call-process "/APPS/FRECV.EX5 FACEBOOK.EX5")
  (call-process "/MEM/FACEBOOk.EX5")
  (my-display))

(define (m command)
  (start-process (string-append "/APPS/MOSH.APP/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/BIN/" command ".sps")))


(define (on-gui-start)
;  (ls "/USER/TEMP")
;  (call-process "/APPS/MOSH.APP/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/BIN/show-words.scm /USER/WORDS.SCM")
;  (start-process "/APPS/MONAGUI/DISPLAY.EX5")
  (start-process "/APPS/MONAGUI/MG.EX5")
;  (start-process "/APPS/MONAGUI/GNOTE.EX5 /USER/BIN/CAT.SCM")

;  (as)
;  (start-process "/MUSIC/HAPPY.EX5 -d /MUSIC/")
; (start-process "/APPS/MONAGUI/MONASQ.EX5")
;  (start-process "/APPS/MONAFRMS/BITMAP.EX5 /APPS/MONAFRMS/MONALISA.JPG 50 300")
;  (start-process "/APPS/MONAGUI/MINE.EX5")
;  (start-process "/APPS/MONAFRMS/MONADAT.APP/MONADAT.EX5")
;(start-process "/APPS/W3M.APP/W3M.EX5 http://www.google.com/")
;(start-process "/APPS/W3M.APP/W3M.EX5 http://m.facebook.com/")
;  (start-process "/APPS/W3M.APP/W3M.EX5 -a 300 -d")
;  (start-process "/APPS/MONAGUI/GTIMER.EX5")
  (for-each call-process *tests-on-gui*)
  (m "shell")
  (start-process "/APPS/MONAGUI/TERMINAL.EX5 -t")
  (start-process "/APPS/MONAGUI/TERMINAL.EX5")

;  (start-process "/APPS/MONAGUI/TERMINAL.EX5")
  (test-end)
;  (terminal)
; (start-process "/APPS/MONAGUI/FACEBOOK.EX5")
;  (my-display)
;; (gnote)
;  (w3m-auto-pilot)
)

(define (w3m-auto-pilot)
  (call-process "/APPS/W3M.APP/W3M.EX5 -a 300 -d")
  (w3m-auto-pilot))

(define (terminal)
  (call-process "/APPS/FRECV.EX5 TERMINAL.EX5")
  (start-process "/MEM/TERMINAL.EX5")
;  (start-process "/MEM/TERMINAL.EX5")
  )

(define (terminal-test)
  (call-process "/APPS/FRECV.EX5 TERMINAL.EX5")
  (start-process "/MEM/TERMINAL.EX5 -t"))

(define (recv name)
  (call-process (string-append "/APPS/FRECV.EX5 " name)))

(define (recvrun name)
  (call-process (string-append "/APPS/FRECV.EX5 " name))
  (call-process (string-append "/MEM/" name)))

(define (run-test name)
  (display "running ")
  (display name)
  (display " ")
  (call-process (string-append "/MEM/MOSH.EXE --disable-acc --loadpath=/LIBS/MOSH/lib:/APPS/MOSH.APP/test/mylib /APPS/MOSH.APP/test/" name)))

(define (mosh)
  (call-process "/APPS/FRECV.EX5 MOSH.EXE")
  (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib:/APPS/MOSH.APP/r6rs-test-suite /APPS/MOSH.APP/r6rs-test-suite/tests/r6rs/run-via-eval.sps")
;;   (for-each run-test
;;             '(
;;              "mosh-test.scm"
;;               "condition.scm"
;;               "shorten.scm"
;;               "exception.scm"
;;               "misc.scm"
;;               "testing.scm"
;;               "mosh-test.scm"
;;               "io-error.scm"
;;              "input-output-port.scm"
;;               "condition.scm"
;;               "rbtree-test.scm"
;;               "unicode.scm"
;;                "srfi8.scm"
;;              "srfi19.scm"
;; ;             "mysql.scm" ; skip
;; ;             "dbi.scm" ; skip
;;               "srfi-misc.scm"
;;               "lists.scm"
;;              "socket.scm"
;;              "match.scm"
;;              "print.scm"
;;               "concurrent.scm"
;;               "concurrent-crash.scm"
;;              "number.scm"
;;              "cgi.scm"
;;              "memcached.scm"
;;              "record.scm"
;;              "output-port.scm"
;;               ))
)
;; (define (mosh)
;;   (call-process "/APPS/FRECV.EX5 MOSH.EXE")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/BIN/show-words.scm /USER/WORDS.SCM"))


;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/condition.scm")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/clos.scm")
;;   (ls "/MEM")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/clos.scm")
;;   (ls "/MEM")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/clos.scm")
;  (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib:/APPS/MOSH.APP/r6rs-test-suite /APPS/MOSH.APP/r6rs-test-suite/tests/r6rs/run-via-eval.sps")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib:/APPS/MOSH.APP/test/mylib /APPS/MOSH.APP/test/record.scm")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/unicode.scm")
;;   (ls "/MEM")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/match.scm")
;;   (ls "/MEM")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/lists.scm")
;;   (display "io-error")(newline)
;;   (ls "/MEM")
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/io-error.scm")
;;   (ls "/MEM")
;;   (display "sh")(newline)
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/shorten.scm")
;;   (ls "/MEM")
;;   (display "rb")(newline)
;;   (call-process "/MEM/MOSH.EXE --loadpath=/LIBS/MOSH/lib /APPS/MOSH.APP/test/rbtree-test.scm")
;  (mosh))

(if (not skip-unit-test?)
    (begin
      (for-each call-process *tests-on-cui*)
      (if (not mona-gui-auto-start)
          (test-end))))


;(call-process "/APPS/MOSH.APP/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/SUBDIR/show-words.scm /USER/SUBDIR/WORDS.SCM")
;(mosh)
;(call-process "/APPS/MOSH.APP/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/SUBDIR/show-words.scm /USER/SUBDIR/WORDS.SCM")
;(ls "/USER/BIN")
(define (cat file)
  (call-process (string-append "/APPS/MOSH.APP/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/BIN/CAT.SCM " file)))

(define (c command arg)
  (call-process (string-append "/APPS/MOSH.APP/MOSH.EXE --loadpath=/LIBS/MOSH/lib /USER/BIN/" command ".SCM " arg)))

(define (rm file)
  (c "RM" file))

(if (file-exists? "/USER/ONSTART.SCM")
    (load "/USER/ONSTART.SCM"))
