(assert-check-true "char=?"
                   (char=? #\a #\a)
                   (char=? #\newline #\newline))

(assert-check-false "char=? should be #f"
                   (char=? #\a #\b)
                   (char=? #\a #\A)
                   (char=? #\a #\newline))

(assert-check-true "char<?"
                   (char<? #\A #\B)
                   (char<? #\a #\b)
                   (char<? #\0 #\9)
                   (char<? #\0 #\a)
                   (char<? #\1 #\a)
                   (char<? #\2 #\a)
                   (char<? #\3 #\a)
                   (char<? #\4 #\a)
                   (char<? #\5 #\a)
                   (char<? #\6 #\a)
                   (char<? #\7 #\a)
                   (char<? #\8 #\a)
                   (char<? #\9 #\a)
                   (char<? #\0 #\B)
                   (char<? #\1 #\B)
                   (char<? #\2 #\B)
                   (char<? #\3 #\B)
                   (char<? #\4 #\B)
                   (char<? #\5 #\B)
                   (char<? #\6 #\B)
                   (char<? #\7 #\B)
                   (char<? #\8 #\B)
                   (char<? #\9 #\B))

(assert-check-false "char>?"
                   (char>? #\A #\B)
                   (char>? #\a #\b)
                   (char>? #\0 #\9)
                   (char>? #\0 #\a)
                   (char>? #\1 #\a)
                   (char>? #\2 #\a)
                   (char>? #\3 #\a)
                   (char>? #\4 #\a)
                   (char>? #\5 #\a)
                   (char>? #\6 #\a)
                   (char>? #\7 #\a)
                   (char>? #\8 #\a)
                   (char>? #\9 #\a)
                   (char>? #\0 #\B)
                   (char>? #\1 #\B)
                   (char>? #\2 #\B)
                   (char>? #\3 #\B)
                   (char>? #\4 #\B)
                   (char>? #\5 #\B)
                   (char>? #\6 #\B)
                   (char>? #\7 #\B)
                   (char>? #\8 #\B)
                   (char>? #\9 #\B))

(assert-check-true "char>?"
                   (char>? #\B #\A)
                   (char>? #\b #\a)
                   (char>? #\9 #\0)
                   (char>? #\a #\0)
                   (char>? #\a #\1)
                   (char>? #\a #\2)
                   (char>? #\a #\3)
                   (char>? #\a #\4)
                   (char>? #\a #\5)
                   (char>? #\a #\6)
                   (char>? #\a #\7)
                   (char>? #\a #\8)
                   (char>? #\a #\9)
                   (char>? #\B #\0)
                   (char>? #\B #\1)
                   (char>? #\B #\2)
                   (char>? #\B #\3)
                   (char>? #\B #\4)
                   (char>? #\B #\5)
                   (char>? #\B #\6)
                   (char>? #\B #\7)
                   (char>? #\B #\8)
                   (char>? #\B #\9))

(assert-check-false "char<?"
                   (char<? #\B #\A)
                   (char<? #\b #\a)
                   (char<? #\9 #\0)
                   (char<? #\a #\0)
                   (char<? #\a #\1)
                   (char<? #\a #\2)
                   (char<? #\a #\3)
                   (char<? #\a #\4)
                   (char<? #\a #\5)
                   (char<? #\a #\6)
                   (char<? #\a #\7)
                   (char<? #\a #\8)
                   (char<? #\a #\9)
                   (char<? #\B #\0)
                   (char<? #\B #\1)
                   (char<? #\B #\2)
                   (char<? #\B #\3)
                   (char<? #\B #\4)
                   (char<? #\B #\5)
                   (char<? #\B #\6)
                   (char<? #\B #\7)
                   (char<? #\B #\8)
                   (char<? #\B #\9))

(assert-check-true "char<=?"
                   (char<=? #\A #\A)
                   (char<=? #\A #\B)
                   (char<=? #\a #\a)
                   (char<=? #\a #\b)
                   (char<=? #\0 #\0)
                   (char<=? #\0 #\9)
                   (char<=? #\0 #\a)
                   (char<=? #\1 #\a)
                   (char<=? #\2 #\a)
                   (char<=? #\3 #\a)
                   (char<=? #\4 #\a)
                   (char<=? #\5 #\a)
                   (char<=? #\6 #\a)
                   (char<=? #\7 #\a)
                   (char<=? #\8 #\a)
                   (char<=? #\9 #\a)
                   (char<=? #\0 #\B)
                   (char<=? #\1 #\B)
                   (char<=? #\2 #\B)
                   (char<=? #\3 #\B)
                   (char<=? #\4 #\B)
                   (char<=? #\5 #\B)
                   (char<=? #\6 #\B)
                   (char<=? #\7 #\B)
                   (char<=? #\8 #\B)
                   (char<=? #\9 #\B))

(assert-check-true "char>=?"
                   (char>=? #\A #\A)
                   (char>=? #\B #\A)
                   (char>=? #\a #\a)
                   (char>=? #\b #\a)
                   (char>=? #\0 #\0)
                   (char>=? #\9 #\0)
                   (char>=? #\a #\0)
                   (char>=? #\a #\1)
                   (char>=? #\a #\2)
                   (char>=? #\a #\3)
                   (char>=? #\a #\4)
                   (char>=? #\a #\5)
                   (char>=? #\a #\6)
                   (char>=? #\a #\7)
                   (char>=? #\a #\8)
                   (char>=? #\a #\9)
                   (char>=? #\B #\0)
                   (char>=? #\B #\1)
                   (char>=? #\B #\2)
                   (char>=? #\B #\3)
                   (char>=? #\B #\4)
                   (char>=? #\B #\5)
                   (char>=? #\B #\6)
                   (char>=? #\B #\7)
                   (char>=? #\B #\8)
                   (char>=? #\B #\9))

;; (assert-check-true "char->integer"
;;                    (= 97 (char->integer #\a))
;;                    (char<=? #\a #\b)
;;                    (< (char->integer #\a) (char->integer #\b))
;;                    (char<=? (integer->char 98) (integer->char 100)))

(assert-check-true "char-ci"
                   (char-ci=? #\a #\A)
                   (char-ci=? #\b #\B)
                   (char-ci=? #\a #\a)
                   (char-ci=? #\0 #\0)
                   (char-ci>? #\B #\a)
                   (char-ci>? #\b #\A)
                   (char-ci<? #\a #\B)
                   (char-ci<? #\A #\b)
                   (char-ci>=? #\B #\a)
                   (char-ci>=? #\b #\A)
                   (char-ci>=? #\A #\a)
                   (char-ci>=? #\a #\A)
                   (char-ci<=? #\a #\B)
                   (char-ci<=? #\A #\b)
                   (char-ci<=? #\B #\b)
                   (char-ci<=? #\b #\B)
                   )

(assert-check-false "char-ci should be #f"
                   (char-ci=? #\B #\a)
                   (char-ci<? #\B #\a)
                   (char-ci<? #\b #\A)
                   (char-ci>? #\a #\B)
                   (char-ci>? #\A #\b)
                   )

(assert-check-true "char-alphabetic?"
                   (char-alphabetic? #\a)
                   (char-alphabetic? #\b)
                   (char-alphabetic? #\A)
                   (char-alphabetic? #\B)
                   (char-alphabetic? #\z)
                   (char-alphabetic? #\Z)
)

(assert-check-false "char-alphabetic? should be #f"
                   (char-alphabetic? #\0)
                   (char-alphabetic? #\space)
                   (char-alphabetic? #\newline)
                   (char-alphabetic? #\9)
)

(assert-check-true "char-numeric?"
                   (char-numeric? #\0)
                   (char-numeric? #\1)
                   (char-numeric? #\2)
                   (char-numeric? #\3)
                   (char-numeric? #\4)
                   (char-numeric? #\9)
)

(assert-check-false "char-numeric? should be #f"
                   (char-numeric? #\a)
                   (char-numeric? #\space)
                   (char-numeric? #\newline)
                   (char-numeric? #\Z)
)

(assert-check-true "char-whitespace?"
                   (char-whitespace? #\space)
                   (char-whitespace? #\newline)
)

(assert-check-false "char-whitespace? should be #f"
                   (char-whitespace? #\a)
                   (char-whitespace? #\0)
                   (char-whitespace? #\A)
                   (char-whitespace? #\X)
)

(assert-check-true "char-upper-case?"
                   (char-upper-case? #\A)
                   (char-upper-case? #\B)
                   (char-upper-case? #\C)
                   (char-upper-case? #\Z)
                   (char-upper-case? #\X)
                   (char-upper-case? #\Y)
)

(assert-check-false "char-upper-case? should be #f"
                   (char-upper-case? #\a)
                   (char-upper-case? #\space)
                   (char-upper-case? #\newline)
                   (char-upper-case? #\0)
)

(assert-check-true "char-lower-case?"
                   (char-lower-case? #\a)
                   (char-lower-case? #\b)
                   (char-lower-case? #\z)
)

(assert-check-false "char-lower-case? should be #f"
                   (char-lower-case? #\0)
                   (char-lower-case? #\space)
                   (char-lower-case? #\newline)
                   (char-lower-case? #\A)
                   (char-lower-case? #\B)
                   (char-lower-case? #\C)
                   (char-lower-case? #\Z)
                   (char-lower-case? #\X)
                   (char-lower-case? #\Y)
)

(assert-check-true "char-upcase"
                   (char=? (char-upcase #\a) #\A)
                   (char=? (char-upcase #\A) #\A)
                   (char=? (char-upcase #\z) #\Z)
                   (char=? (char-upcase #\0) #\0)
                   (char=? (char-upcase #\space) #\space)
                   (char=? (char-upcase #\newline) #\newline)
)

(assert-check-true "char-downcase"
                   (char=? (char-downcase #\A) #\a)
                   (char=? (char-downcase #\a) #\a)
                   (char=? (char-downcase #\Z) #\z)
                   (char=? (char-downcase #\0) #\0)
                   (char=? (char-downcase #\space) #\space)
                   (char=? (char-downcase #\newline) #\newline)
)
